@8.  ПРОГРАММИРОВАНИЕ

В данной главе дано описание языка программирования на котором в
 системе "АЛЬФА" ведется подготовка управляющих программ.

@8.1  ДВИЖЕНИЕ ОСЕЙ

Направление движения осей станка предусмотрено Стандартом EIA RS 267
Это направление определяется движением инструмента относительно детали,
независимо от того, кто из них будет двигаться.

@8.2  ИЗЛОЖЕНИЕ ПРОГРАММЫ

Изложение программы, т.е. всей необходимой геометрической и технологической
информации для осуществления предусмотренного цикла обработки, требует от
программиста проведения подготовительной работы, которая состоит из
следующих операций:

а) Определить на чертеже начальную точку осей (ноль детали) относительно
    которой будут соотнесены все перемещения при обработке детали.
    Координаты начальной точки  должны  устанавливаться в соответствии с
    фактическим масштабом детали.
б) Определить на чертеже точки отсчета и точки зажима самой детали.
в) Убедиться, что все операции, которые необходимо выполнить находятся в
    рабочей зоне станка, на котором будет производиться обработка.
г) Составить список требуемых инструментов в строгой последовательности,
    необходимой для программы.
д) Определить технологические условия резки (скорость вращения шпинделя
    и скорость подачи) для каждого инструмента.
    Указанные данные заносятся программистом в карточку инструмента.
е) Для станков, реализующих перемещения в угловых координатных осях,
    необходимо произвести замеры реальных расстояний от торца шпинделя
    до оси подвеса каждой из координатных осей, также надо определить
    длину инструмента в оправе, для каждого инструмента, участвующего
    в процессе обработки детали.

Указанные параметры будут необходимы программисту при составлении
управляющей программы (УП).

@8.3  ВВОД ПРОГРАММЫ В СИСТЕМУ

Управляющая программа составляется программистом вручную или с помощью
 автоматизированных систем подготовки.
Тип и уровень сложности указанных систем не регламентируется, выдаваемый
 ими конечный файл, должен быть составлен в соответствии с кодировками и
 форматами, принятыми в системе "АЛЬФА", которые изложены в данной главе.

Составленная программа обработки детали (УП) должна быть перенесена на
 жесткий диск стойки управления посредством копирования с дискеты 3.5
 дюйма или передачей по сети, если таковая установлена.

Файлы УП хранятся на диске  C:  в папке \ISO, которая находится в
 базовой папке \ALPHA.
Максимальное количество файлов, одновременно находящихся в папке \ISO
 составляет -1024 файла.

Копирование может выполнятся как с помощью стандартных РС- средств
 (Norton Commander, DOS, Windows) так и с помощью функций системы
  "АЛЬФА", описанных в главе 7.

@8.4  ФОРМАТ ИНФОРМАЦИИ

Для последующего изложения порядка программирования необходимо ввести
 следующие термины:

Символ -цифра, буква или знак, используемые для выражения информации.
 Пример:   I, G, %, X, 7, ) ...

Используемые при составлении УП символы приведены в таблице 8.4.1.
Исключение составляют символы, стоящие в комментирующих кадрах за
 знаком ; , а также передаваемые функцией DIS в качестве сообщений.
В указанных случаях никаких ограничений на используемые характеры
 не налагается.
Символ  "_" считается алфавитным.


                                       Таблица 8.4.1
 ┌──────────────────────────────────────────────────┐
 │  ТИП  СИМВОЛА   │           СИМВОЛЫ              │
 ├──────────────────────────────────────────────────┤
 │    Алфавитные   │   ABCDEFGHIJKLMNOPQRSTUVWXYZ_  │
 │      Цифровые   │   0123456789                   │
 │         Знаки   │   +-*/=.,'"()%;                │
 │        Пробел   │   Пустой символ                │
 └──────────────────────────────────────────────────┘

Адрес  -буква, которая определяет тип инструкции.
Пример:    N, G, X, Y, Z, A, B, F, M ...

Слово  -выражение, состоящее из адреса и следующего за ним цифрового
 значения, между адресом и цифровым значением использование одного
 или нескольких пустых символов (пробелов) недопустимо.
Цифровые значения могут быть выражены в своих единицах измерения безо
 всякого специального формата.
Если цифровые значения имеют десятичную часть, она должна быть записана
 после десятичной точки. Примеры правильного программирования слов:

N00002,  N2,  X283.293847,  X+283.29,  Y-26354, Y-2937.
Z-.782  Z0.782  G01  G1  M14  T26.99  F6000  S800

Кадр  -строка, содержащая набор слов, определяющих операции, которые
 необходимо выполнить в процессе обработки детали.
Управляющая программа состоит из последовательности кадров, которые
 позволяют описать цикл обработки.
Максимальная длина кадра -79 характеров.
Никаких специальных знаков в конце кадра ставить не надо.
Слова в кадре могут идти подряд (без пробелов), а могут быть разделены
 произвольным количеством пустых характеров, например:

N001G90X-100.0Y200                 (слова не разделены пробелами)
N001    G90  X-100.0     Y200      (слова разделены пробелами)

Структурно кадр состоит из следующих полей:
 а)  поле коментария;
 б)  поле номера кадра
 в)  поле метки кадра
 г)  рабочее поле кадра

Поля могут присутствовать в кадре поодиночке или одновременно или
 отсутствовать вообще, но в случае их присутствия обязательно следовать
 в указанном выше порядке.
При задании инструкций в режиме ручного ввода кадра (MDI) программирование
 полей а), б), в)  необязательно.

@8.4.1  Поле комментария

Через указанное поле осуществляется оперативное управление активностью
 данного кадра УП.
Если это поле пустое, текущий кадр обрабатывается и исполняется системой.
Если в поле стоит характер  ;   - весь кадр воспринимается системой как
 комментирующий и не подлежит исполнению.
Если в поле стоит характер / -интерпретация кадра зависит от состояния
 системной переменной  USB (5.4.2):
  -если USB= 1  - текущий кадр обрабатывается и исполняется системой.
  -если USB= 0  - кадр воспринимается системой  как комментирующий и
                  не подлежит исполнению.

@8.4.2  Поле номера кадра

Служит для нумерации кадров программы.
Формат устанавливается адресом  N, за  которым следует числовой параметр,
 который задается как целое число из диапазона значений  0..999999.
Поле обязательно программируется во всех кадрах УП, которые не
 обрабатываются, как комментирующие и подлежат исполнению.

Система не накладывает каких-либо ограничений на порядок нумерации кадров,
 однако, для удобства работы оператора, кадры УП рекомендуется нумеровать
 сверху вниз по файлу с постоянным шагом.
Для этих целей в "Редакторе" системы (глава 7) организованы специальные
 опции Nфайл и Nпрогр, выполняющие автоматическую нумерацию кадров УП
 всего файла или основной программы соответственно.

@8.4.3  Поле метки кадра

Позволяет дать символическое имя кадру, которому оно принадлежит.
Имя служит для возможности вызова кадра из различных точек программы с
 помощью инструкций перехода.
В файле нельзя определить белее одной метки с одинаковым именем.

Формат - 1..8 алфавитно-цифровых символа, заключенных в знаки " "
 (двойные кавычки).
В общем случае (если нет инструкций перехода на данный кадр),
 программирование поля необязательно.
Максимальное количество меток в файле -255.

@8.4.4  Рабочее поле кадра

В рабочем поле программируются инструкции:
 ■ кадров ISO;
 ■ кадров присвоения;
 ■ кадров с трехбуквенными кодами;
(см. пункт  8.5  настоящего руководства).
Программирование поля необязательно.

Примеры правильного программирования кадров УП:

;  ЭТО  ПРИМЕР
/  этот кадр пройдет как  кадр-комментарий если  флаг USB= 0
/  однако такие кадры программировать
/  нецелесообразно
;  лучше это  делать, используя знак ;
/ N837  G00  D2   X100  Y100  Z100    F800
  N0283
/                N0283                              X100F200
N999984  "LABEL0"  E84= 293.55594
                                /           N556"N556"
/   N11103    "M01"    (UAO, 10)
N77238 "L1"  S1200 M03 M08
N273       "A73"
N0000001    G2  I-100    J-100  F500
N1    F500
N938  (RPT,E0)
; N1032   X-200 A-2.192
          ;  N24   E45 =  ABS(E22*E8-10.723)+SQR(E14/2.8)
N24   E45 =ABS(   E22  *E8    -10.723)   +      SQR(E14  /   2.8)
N390 "__STOP"    (ESUB)
N990990   "_0000000"   (DIS)
N0  "SUB" (SUB,SUB)
N224  E76=34.521, E150=(E76+E77)/2, E76=E150, E199=ABS(SQR(3.1415*E99))
N1000  E10=0, E11=0, E12=0, E100=0

@8.5  ТИПЫ КАДРОВ

По своему функциональному назначению и по форматам программирования
 кадры можно разделить на следующие типы:

 а) комментирующие кадры
 б) кадры ISO
 в) кадры присвоения
 г) кадры с трехбуквенными кодами


@8.5.1  Комментирующие кадры

Позволяют программисту вводить в УП необходимые фразы, пояснения,
 комментарии, что делает текст программы более читабельным и понятным.
Комментирующие кадры пропускаются во время выполнения программы и не
 выдают посылки оператору.
Формат состоит из последовательности любых характеров, генерируемых
 клавиатурой, причем первым непустым характером в кадре в обязательном
 порядке должен быть знак ;.

Примеры правильного программирования комментирующих кадров:
;  Используем  ЛЮБЫЕ  буквы  ФАП ЕKQ dcaca  вгцй
;  Цифры      3273656    78401234   567890
;  Знаки     " " ! , ! " № ; % : ? * ( ) _ + - / \ < >
      ;  но первый знак  ;  (пробелы не в cчет)

@8.5.2  Кадры ISO

Кадры, инструкции которых предусмотрены Стандартом ISO.
Примеры правильного программирования кадров ISO.

N01 Z-100G90 X-100.000 Y-100. G00 F600
N02 F200 X-300 I-200 J-100 S1000 G2 M3

@8.5.3  Кадры присвоения

Позволяют непосредственно из программы присвоить значения т.н.
 Е- параметрам (8.8), представляющие собой массивы переменных
 необходимые для организации параметрического программирования
 например:

N0  E56= 283.9123
N1  E89 = SQR(E20/7.981)+COS(E34*3.14/180)
N2  E76=34.521, E150=(E76+E77)/2, E76=E150, E199=ABS(SQR(3.1415*E99))
N3  E10=0,E11=0,E12=0,E100=0

@8.5.4  Кадры с трехбуквенными кодами

Это кадры, в которых тип операции, выполнение которой предусмотрено,
 задан трехбуквенной командой (кодом), согласованной со Стандартом
 EIA 1177 B, например:

N0 (RPT,20)
N1 (ERP)
N2 (TMR, 100)
N4 (SUB, L0000)
N5 (BNC, LABEL)
N6 (COL, 5)

@8.6  СТРУКТУРА УПРАВЛЯЮЩЕЙ ПРОГРАММЫ

Файл управляющей программы (УП) обычно состоит из множества кадров.
Система ведет отработку кадров УП в следующем порядке:

@8.6.1  Основная программа

Основная программа начинается за кадром, содержащим единственный знак-
 % и отрабатывается  последовательно кадр за кадром до конца файла.
Никаких специальных знаков в конце файла ставить не надо.

@8.6.2  Внутренние подпрограммы

Выше знака % располагаются подпрограммы данного файла, (если таковые
 организованы), которые начинаются инструкцией (SUB, <имя подпрограммы>)
 и обязательно должны заканчиваться инструкцией (ESUB).

@8.6.3  Внешние подпрограммы

Перед областью внутренних подпрограмм, (если необходимо)
 программируются инструкции подключения внешних подпрограмм
 в следующем формате:

#  <имя файла>  ,  <имя подпрограммы> , ... ... ... <имя подпрограммы>

По данной инструкции система последовательно находит в файле
 <имя файла> перечисленные подпрограммы с именем <имя подпрограммы>
 и вставляет их текст, от строки  (SUB, < имя подпрограммы > ) до
 строки (ЕSUB), в текущий файл выше первой инструкции подключения (#).
Если ни одно <имя подпрограммы> не указано -система вставляет в
 текущий файл все подпрограммы, найденные в файле <имя файла>.
Операция вставки текста подпрограмм в исходный файл выполняется
 автоматически при загрузке файла или по команде "Сборка" (см. Глава 7).
Вставленный текст является временным и не сохраняется при выполнении
 операций записи файла, однако сохраняются инструкции подключения
 внешних подпрограмм.
Порядок работы с текстом внешних подпрограмм такой-же как и с
 внутренними, их можно корректировать, вызывать, компилировать.
Номер кадра с инструкцией  #  не программируется.

Максимальное количество подпрограмм -128 (внешних и внутренних).
Подпрограммы вызываются произвольное количество раз как из основной
 программы, так и из любой другой подпрограммы данного файла с
 помощью инструкции (CLS, < имя подпрограммы >), далее, последовательно
 отрабатываются кадры вызванной подпрограммы до принятия кода ESUB,
 после чего управление возвращается на кадр, следующий за кадром вызова
 подпрограммы.
Подпрограммы в файле не могут иметь одинаковые имена.
Максимальный уровень вложений подпрограмм -5.

Условные и безусловные переходы из одной подпрограммы в другую, а также
 из программы в подпрограмму не допускаются.
Циклы действуют только в теле своей структурной единицы, т.е. каждый
 цикл, открытый в подпрограмме кодом RPT должен быть закрыт в теле
 данной подпрограммы (до кода ESUB).

По окончании отработки файла УП система выдает на дисплей сообщение
 <КОНЕЦ ПРОГРАММЫ> и автоматически переводит внутренний указатель
  отработки на начало файла.
Использование специальных команд (M02,M30) в конце программы необязательно.

Примеры правильной организации файла УП:

; ------------------ Подпрограмма FRAME    Вставленный текст
N010  (SUB,FRAME)                          внешних
....                                       подпрограмм
N040   (ESUB)
; ------------------ Подпрограмма DRILL
N010  (SUB,DRILL)
....
N040   (ESUB)

#  A:\LIB001.LIB, FRAMЕ                    Инструкции подключения
#  LIB002, DRILL                           внешних подпрограмм

N001  (SUB,L00001)   начало L00001         Внутренние подпрограммы
...
N088  (CLS, L00002)  вызов L00002
...
N123  (ESUB)         конец  L00001

N124  (SUB,L00002)   начало L00001
 ...
 ...
 N280  (ESUB)        конец  L00002

%                                          Начало основной программы
...
...                                        Тело основной программы
N200 (CLS,L00001)    вызов L00001
...
N200 (CLS,L00002)    вызов L00002
...
N300 G0X0Y0Z0        последний кадр        Конец основной программы

@8.7  КАДРЫ ISO

Система поддерживает формат программирования:

N G D XYZABCUWV PRIJK F S T MH
 где каждая буква является адресом, задающим операции:

   N            -номер кадра;
   G            -подготовительные функции;
   D            -установка коррекции на R,L инструмента;
   XYZABCUWV    -буквенные обозначения осей;
   PRIJK        -вспомогательные функции;
   F            -подача;
   S            -обороты шпинделя;
   T            -инструмент;
   MH           -технологические функции;

Кадр ISO состоит из последовательности слов с адресами и может содержать:

 ■ 0..4 слов с адресом G ,при условии, что операции взаимно совместимы.
 ■ 0..3 слов с адресами М.
 ■ Все остальные адреса могут быть использованы в одном кадре не более
  одного раза.

Адрес N программируется только с явным числовым параметром, остальные
 адреса могут программироваться либо с числовым параметром, либо с
 использованием основных переменных E -параметров (8.8.1).
С адресами GDTMH используются только целочисленные Е-параметры (Е0..Е9).
Программирование каких либо символов между адресом и символом Е недопустимо.
Первым программируется слово с адресом N и далее адреса
 в произвольном порядке.
Функции М отрабатываются согласно приоритету (8.7.12), если приоритет
 равный, то в порядке следования.

Примеры правильного программирования кадров ISO:

N0  G0  X100 YE45 ZE10
N1 Y255.239 IE55 G2 XE99 JE18 F1000
N2 S1000 GЕ9 G1 A10.000 BE61 FE88 ТЕ7.Е1
N3 G82 XE10 YE20 Z-100 G90 PE25 RE50 FE11
N4  G79 G00 X0 Y0 Z0 A0 B0 C0 U0 W0 V0 M05 M9 M02
N5  G04 G01 G90 G71  XE60  S1000 T4.4 M03 M06

@8.7.1  Номер кадра

Слово с адресом N обязано присутствовать в каждом кадре УП,
содержит числовой параметр целого типа,
диапазон допустимых значений  параметра 0..999999.

Слово с адресом N необязательно программировать при
задании кадра с командной строки в режиме MDI.

@8.7.2  G- операции

Слово с адресом G задает подготовительные операции, устанавливающие
 соответствующие режимы отработки.

Содержит числовой параметр целого типа, или переменную целого типа
 (Е0..Е9), диапазон допустимых значений  параметра 0..99.
В одном кадре допустимо использовать 0..4 слова с адресом G, при условии,
 что эти операции взаимно совместимы.

Коды классифицированы по функциональным признакам на четырнадцать
 модальных групп (см. Таблицу  8.7.1), операции, входящие в одну
 модальную группу являются несовместимыми в одном кадре.

Функции делятся на те, действия которых распространяется на все следующие
 вниз по файлу кадры УП, до тех пор пока не будет запрограммирован
 G- код из той- же модальной группы, и те, действие которых
 распространяется только на тот кадр, в котором они запрограммированы.

В настоящее время в системе "АЛЬФА" поддерживаются коды
 показанные в Таблице 8.7.2.

Совместимость G- функций в кадре отражена в Таблице 8.7.3,
 здесь цифрой 1 обозначены взаимно совместимые операции.
Таблица 8.7.3 вводится в систему через файл GTABLE.INI, записанный
 в специальном битовом формате (см. Приложение А).

 Таблица 8.7.1
 Классификация G- функций по модальным группам

 ┌───────────────────────────────────────────────────────────────────────┐
 │ Группа │ G-операции │ Описание                                        │
 ├───────────────────────────────────────────────────────────────────────┤
 │   a    │ G0..G3     │ Определение движения                            │
 │   b    │ G17..G19   │ Определение плоскости интерполяции              │
 │   c    │ G27..G29   │ Определение динамического режима                │
 │   d    │ G38..G39   │ Порядок построения эквидистантного контура      │
 │   e    │ G40..G46   │ Разрешение и блокировка сдвига резца по радиусу │
 │   f    │ G70..G71   │ Программирование единицах измерения мм/мкм      │
 │   g    │ G80..G89   │ Cтандартные фиксированные циклы                 │
 │   h    │ G90..G91   │ Инкрементное и абсолютное программирование      │
 │   i    │ G79        │ Программирование с привязкой к нулю станка      │
 │   j    │ G04 G09    │ Атрибуты динамического режима                   │
 │   k    │ ...        │ Не используется                                 │
 │   l    │ G94        │ Кодирование скорости подачи                     │
 │   m    │ G97        │ Кодирование скорости шпинделя                   │
 │   n    │ G98.. G99  │ Управление отводом в циклах G81..G89            │
 └───────────────────────────────────────────────────────────────────────┘

 Таблица 8.7.2
 G- операции, поддерживаемые системой "АЛЬФА"

 ┌───────────────────────────────────────────────────────────────────────┐
 │ Код │ ВКЛ │ Активность │ Описание                                     │
 ├───────────────────────────────────────────────────────────────────────┤
 │ G00 │  +  │ По файлу   │ Быстрая установка осей                       │
 │ G01 │  -  │ По файлу   │ Линейная интерполяция                        │
 │ G02 │  -  │ По файлу   │ Круговая интерполяция по часовой стрелке     │
 │ G03 │  -  │ По файлу   │ Круговая интерполяция против часовой стрелки │
 │ G17 │  +  │ По файлу   │ Круговая интерполяция и компенсация          │
 │     │     │            │  в плоскости XY                              │
 │ G18 │  -  │ По файлу   │ Круговая интерполяция и компенсация          │
 │     │     │            │  в плоскости XZ                              │
 │ G19 │  -  │ По файлу   │ Круговая интерполяция и компенсация          │
 │     │     │            │  в плоскости YZ                              │
 │ G27 │  +  │ По файлу   │ Режим непрерывного контура с автоматическим  │
 │     │     │            │  замедлением на углах (мягкий режим)         │
 │ G28 │  -  │ По файлу   │ Режим непрерывного контура с автоматическим  │
 │     │     │            │  замедлением на углах (жесткий режим)        │
 │ G29 │  -  │ По файлу   │ Торможение до 0 в каждой точке               │
 │ G38 │  +  │ По файлу   │ При обходе углов >180°-сопряжение выполнять  │
 │     │     │            │  вставленной дугой окружности                │
 │ G39 │  -  │ По файлу   │ При обходе углов >180°-сопряжение выполнять  │
 │     │     │            │  пересечением элементов                      │
 │ G40 │  +  │ По файлу   │ Отмена компенсации радиуса инструмента       │
 │ G41 │  -  │ По файлу   │ Компенсация радиуса инструмента              │
 │     │     │            │  (резец слева от детали)                     │
 │ G42 │  -  │ По файлу   │ Компенсация радиуса инструмента              │
 │     │     │            │  (резец справа от детали)                    │
 │ G43 │  -  │ В кадре    │ Удлиннить вектор перемещений на              │
 │     │     │            │  величину радиуса инструмента                │
 │ G44 │  -  │ В кадре    │ Укоротить вектор перемещений на              │
 │     │     │            │  величину радиуса инструмента                │
 │ G45 │  -  │ В кадре    │ Удлиннить вектор перемещений на              │
 │     │     │            │  величину диаметра инструмента               │
 │ G46 │  -  │ В кадре    │ Укоротить вектор перемещений на              │
 │     │     │            │  величину диаметра инструмента               │
 │ G70 │  -  │ По файлу   │ Режим программирования в мкм                 │
 │ G71 │  +  │ По файлу   │ Режим программирования в мм                  │
 │ G80 │  +  │ По файлу   │ Стирание фиксированных циклов                │
 │ G81 │  -  │ По файлу   │ Фиксированный цикл сверления                 │
 │ G82 │  -  │ По файлу   │ Фиксированный цикл сверления с перерывом     │
 │ G83 │  -  │ По файлу   │ Цикл сверления глубокого отверстия           │
 │ G84 │  -  │ По файлу   │ Фиксированный цикл нарезания                 │
 │     │     │            │  резьбы метчиком (правая резьба)             │
 │ G85 │  -  │ По файлу   │ Фиксированный цикл расточки                  │
 │ G86 │  -  │ По файлу   │ Фиксированный цикл расточки с перерывом      │
 │ G87 │  -  │ По файлу   │ Фиксированный цикл расточки с остановом      │
 │ G88 │  -  │ По файлу   │ Фиксированный цикл нарезания                 │
 │     │     │            │  резьбы метчиком (левая резьба)              │
 │ G89 │  -  │ По файлу   │ Фиксированный цикл расточки с перерывом      │
 │     │     │            │  и возвращением на рабочей подаче            │
 │ G90 │  +  │ По файлу   │ Абсолютное программирование                  │
 │ G91 │  -  │ По файлу   │ Инкрементное программирование                │
 │ G79 │  -  │ В кадре    │ Программирование с привязкой к нулю станка   │
 │ G04 │  -  │ В кадре    │ Перерыв в конце кадра                        │
 │ G09 │  -  │ В кадре    │ Замедление в конце кадра                     │
 │ G94 │  +  │ По файлу   │ Скорость подачи в мм/мин                     │
 │ G97 │  +  │ По файлу   │ Скорость вращения шпинделя в об/мин          │
 │ G98 │  +  │ По файлу   │ Отвод инструмента на уровень Z- начальное    │
 │     │     │            │  в циклах G81..G89                           │
 │ G99 │  -  │ По файлу   │ Отвод инструмента на уровень R               │
 │     │     │            │  в циклах G81..G89                           │
 └───────────────────────────────────────────────────────────────────────┘

В графе ВКЛ знаком + обозначены исходные G- коды, которые система
 автоматически устанавливает:
 ■ при включении;
 ■ в начале управляющей программы;
 ■ при выполнении команд сброса параметры в исходное и ЕSC (Глава 3);
Исходные G- коды устанавливаются в файле конфигурации системы
 BASE.INI (Таблица 5.3).

В графе "Активность" показана область действия данного G- кода:
 ■ По файлу -действие кода начинается с кадра, в котором он задан и
   распространяется на все последующие кадры УП.
   Стирается заданием G- кода из той-же модальной группы.
 ■ В кадре -действие кода распространяется только на кадр,
   в котором он задан.

 Таблица 8.7.3
 Совместимость G- операций, в одном кадре



 ┌───────────────────────────────────────────────────────────────────────┐
 │    G          2       17 27    38    41 43 70       81 90       98    │
 │     G   0  1  3  4  9 19 28 29 39 40 42 46 71 79 80 89 91 94 97 99    │
 ├───────────────────────────────────────────────────────────────────────┤
 │    00   0  0  0  1  1  0  1  1  1  1  1  1  1  1  0  1  1  1  1  1    │
 │    01   0  0  0  1  1  0  1  1  1  1  1  1  1  1  0  1  1  1  1  1    │
 │    02   0  0  0  1  1  0  1  1  1  1  1  1  1  1  0  0  1  1  1  1    │
 │    03   0  0  0  1  1  0  1  1  1  1  1  1  1  1  0  0  1  1  1  1    │
 │    04   1  1  1  0  0  0  0  1  1  1  1  1  1  1  1  0  1  1  1  1    │
 │    09   1  1  1  0  0  0  0  1  1  1  1  1  1  1  1  0  1  1  1  1    │
 │    17   0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0    │
 │    18   0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0    │
 │    19   0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0    │
 │    27   1  1  1  0  1  0  0  0  1  1  1  1  1  1  1  0  1  1  1  1    │
 │    28   1  1  1  0  1  0  0  0  1  1  1  1  1  1  1  0  1  1  1  1    │
 │    29   1  1  1  1  1  0  0  0  1  1  1  1  1  1  1  0  1  1  1  1    │
 │    38   1  1  1  1  1  0  1  1  0  1  1  1  1  1  1  1  1  1  1  1    │
 │    39   1  1  1  1  1  0  1  1  0  1  1  1  1  1  1  1  1  1  1  1    │
 │    40   1  1  1  1  1  0  1  1  1  0  0  0  1  0  0  0  1  1  1  1    │
 │    41   1  1  1  1  1  0  1  1  1  0  0  0  1  0  0  0  1  1  1  1    │
 │    42   1  1  1  1  1  0  1  1  1  0  0  0  1  0  0  0  1  1  1  1    │
 │    43   1  1  1  1  1  0  1  1  1  0  0  0  1  0  0  0  1  1  1  1    │
 │    44   1  1  1  1  1  0  1  1  1  0  0  0  1  0  0  0  1  1  1  1    │
 │    45   1  1  1  1  1  0  1  1  1  0  0  0  1  0  0  0  1  1  1  1    │
 │    46   1  1  1  1  1  0  1  1  1  0  0  0  1  0  0  0  1  1  1  1    │
 │    70   1  1  1  1  1  0  1  1  1  1  1  1  0  1  1  1  1  1  1  1    │
 │    71   1  1  1  1  1  0  1  1  1  1  1  1  0  1  1  1  1  1  1  1    │
 │    79   1  1  1  1  1  0  1  1  1  0  0  0  1  0  0  0  0  1  1  1    │
 │    80   0  0  0  1  1  0  1  1  1  0  0  0  1  0  0  0  1  1  1  1    │
 │    81   1  1  0  1  1  0  0  0  1  0  0  0  1  0  0  0  1  1  1  1    │
 │    82   1  1  0  1  1  0  0  0  1  0  0  0  1  0  0  0  1  1  1  1    │
 │    83   1  1  0  1  1  0  0  0  1  0  0  0  1  0  0  0  1  1  1  1    │
 │    84   1  1  0  1  1  0  0  0  1  0  0  0  1  0  0  0  1  1  1  1    │
 │    85   1  1  0  1  1  0  0  0  1  0  0  0  1  0  0  0  1  1  1  1    │
 │    86   1  1  0  1  1  0  0  0  1  0  0  0  1  0  0  0  1  1  1  1    │
 │    87   1  1  0  1  1  0  0  0  1  0  0  0  1  0  0  0  1  1  1  1    │
 │    88   1  1  0  1  1  0  0  0  1  0  0  0  1  0  0  0  1  1  1  1    │
 │    89   1  1  0  1  1  0  0  0  1  0  0  0  1  0  0  0  1  1  1  1    │
 │    90   1  1  1  1  1  0  1  1  1  1  1  1  1  0  1  1  0  1  1  1    │
 │    91   1  1  1  1  1  0  1  1  1  1  1  1  1  0  1  1  0  1  1  1    │
 │    94   1  1  1  1  1  0  1  1  1  1  1  1  1  1  1  1  1  1  1  1    │
 │    97   1  1  1  1  1  0  1  1  1  1  1  1  1  1  1  1  1  1  1  1    │
 │    98   1  1  1  1  1  0  1  1  1  1  1  1  1  1  1  1  1  1  1  0    │
 │    99   1  1  1  1  1  0  1  1  1  1  1  1  1  1  1  1  1  1  1  0    │
 └───────────────────────────────────────────────────────────────────────┘

@8.7.2.1  Модальная группа А
G- коды, определяющие тип движения

Группа состоит из следующих функций: G00, G01, G02, G03.
Исходной (устанавливаемой при включении и сбросе) является функция G00.

G00- быстрое линейное перемещение по осям

Запрограммированные оси перемещаются одновременно и прямолинейно
 из начальной точки в конечную,подача по вектору равна значению,
 заданному в системной переменной FQC (мм/мин).
Запрограммированное слово G00 остается активным, пока оно не будет
 перезаписано кодами  G01, G02, G03.
Потенциометр подачи корректирует значение FQC
 если системный флаг  URL =1 (см. Глава 5).

Пример:
N0001   X20  Y15
N0002  G0  X70  Y40

G01- линейное перемещение по осям

Запрограммированные оси перемещаются одновременно и прямолинейно
 из начальной точки в конечную,подача по вектору равна значению,
 заданному последней инструкцией F (мм/мин).
Запрограммированное слово F остается активным, пока не будет перезаписано.
Потенциометр подачи корректирует значение F на всей заданной траектории.
Запрограммированное слово G01 остается активным, пока оно не будет
 перезаписано кодами  G00, G02, G03.

Пример:
N0001  Y20  Z15
N0002  G1  Y70  Z40   F500

G02..G03- круговая интерполяция

Действует в выбранной плоскости, по относящимся к этой плоскости осям,
 поэтому прежде чем задать контур, надо задать плоскость интерполяции
 с помощью кодов G17..G19.
В кадрах с активными G02, G03  допустимо программирование только
 адресов осей, составляющих плоскость интерполяции.
Запрограммированные оси перемещаются вдоль контура окружности,
 из начальной точки в конечную,подача по вектору равна значению,
 заданному последней инструкцией  F (мм/мин).

Точка центра дуги задается словами I,J.
Адрес I программирует точку центра по первой оси,
 составляющей плоскость интерполяции.
Адрес J программирует точку центра по второй оси,
 составляющей плоскость интерполяции.
Программирование I,J в кадре перемещения -обязательно.

Максимально программируемая дуга равна 360 град.
Если разность координат начальной и конечной точек дуги меньше значения
 заданного в переменной DRC -система отрабатывает полную окружность, в
 противном случае отрабатывается дуга окружности.

Разность между радиусами, посчитанными из центра окружности относительно
 начальной и конечной точки по модулю не должна превышает значение
 системной переменной DRC, задаваемое в  файле конфигурации BASE.INI
 (Таблица 5.4).

Можно программировать круговую интерполяцию в приращениях (по G91),
 тогда координаты конечной точки окружности и координаты центра задаются
 относительно координат начальной точки окружности.

Однажды запрограммированное слово G02 или G03 остается активным, пока
 оно не будет перезаписано кодами G00, G01, G03 или G02.
Потенциометр подачи корректирует значение F на всей заданной траектории.
G02 задает круговую интерполяцию по часовой стрелке.
G03 задает круговую интерполяцию против часовой стрелки.
Направление кругового движения определяется так, что наблюдатель смотрит
 на плоскость интерполяции со стороны, перпендикулярной к ней
 положительной полуоси.

Пример программирования кадров ISO с круговой интерполяцией
 в абсолютных координатах:

N0123  G90  G17  X100  Y100
N0124  G2 X0 Y0 I0 J100 F200
N0125  G3 Y-100 J-50
N0126  J-75
N0127  G0 Z50 J0
N0128  G3
N0129  X100 Y0

Тот -же пример с программированием круговой интерполяции
 в относительных координатах:

N0123  G90  G17  X100  Y100
N0124  G02  G91  X-100 Y-100  I-100  J0 F200
N0125  G03 Y-100 J-50
N0126  J-25
N0127  G0 Z50 J100
N0128  G3
N0129  X100 Y100

@8.7.2.2  Модальная группа B:
G- коды, определяющие плоскость интерполяции

Плоскость интерполяции задается кодами G17, G18, G19
по следующей схеме:

 ■ G17 -плоскость образована 1,2 осями, заданными в конфигурации.
 ■ G18 -плоскость образована 1,3 осями, заданными в конфигурации.
 ■ G19 -плоскость образована 2,3 осями, заданными в конфигурации.

Допустим, что в конфигурационном файле первые три оси описаны
 как X, Y, Z , тогда
 ■ G17 -активна плоскость XY.
 ■ G18 -активна плоскость XZ.
 ■ G19 -активна плоскость YZ.

Функции модальной группы B несовместимы в кадре ни с одной функцией G.
Запрограммированное слово G17..G19 остается активным, пока оно
 не будет перезаписано другим кодом данной модальной группы.
Исходной (устанавливаемой при включении и сбросе) является функция G17.

@8.7.2.3  Модальная группа C:
G- коды, определяющие динамику движения

Динамический режим движения задается кодами G27, G28, G29.
G27, G28- программируют непрерывное перемещение с автоматическим
 замедлением на углах.

Система  "АЛЬФА" автоматически рассчитывает скорость по профилю
 в зависимости от:
 ■ запрограммированной подачи F;
 ■ совокупности длин векторов перемещений в окрестности текущего кадра;
 ■ величины заданного рабочего ускорения А;
 ■ значения допустимого перепада скорости DV на изломах профиля.

Система автоматически корректирует запрограммированную величину подачи F,
 чтобы при прохождении изломов траектории мгновенное изменение скорости ни
 по одной оси, составляющей вектор, не превысила бы заданную величину DV.

В файле конфигурации BASE.INI (Таблица 5.4) отведены две переменные
 DV27, DV28, определяющие параметр DV для функций G27, G28 соответственно,
 изменить параметр DV для функции G27 можно и из системы (6.2.1).
 диапазон допустимых значений - 0.01..10 мм/сек.

Переменные DV27, DV28 настраивают на различные уровни допустимого перепада
 скорости (обычно 0.01<DV27<2, 2<DV28<10), что позволяет мобильно, путем
 задания инструкций G27 G28, переходить с одной динамики на другую.

Инструкции G27 G28 управляют динамикой движения по приведенной схеме
 только в том случае, если перемещения по профилю запрограммированы
 функциями G01, G02, G03.

Если тип движения задан инструкцией G00, перемещения всегда
 отрабатываются от точки к точке с торможением до 0, независимо от того,
 какая инструкция модальной группы C активна.

G29 - программирует перемещение точки к точке с торможением до 0 в конце
 каждого кадра, независимо от заданного типа перемещения (G00..G03).

Запрограммированное слово G27..G29 остается активным, пока оно
 не будет перезаписано другим кодом данной модальной группы.
Исходной (устанавливаемой при включении и сбросе) является функция G27.

@8.7.2.4  Модальная группа D:
G-коды, определяющие порядок обхода углов >180° эквидистантного контура,
 заданного функциями G41, G42.

Группу образуют следующие функции:
 ■ G38 -сопряжение элементов контура выполняется с помощью вставленной
        дуги окружности;
 ■ G39 -сопряжение выполняется путем пересечения элементов контура.

Запрограммированное слово G38..G39 остается активным, пока оно
 не будет перезаписано другим кодом данной модальной группы.
Исходной (устанавливаемой при включении и сбросе) является функция G38.

Переключение функций G38..G39 может выполняться при включенных G41..G42
 на любом участке эквидистантного контура.
Действие установленной функции начинается с первой после включения
 узловой точки.

Построение эквидистантного контура по коду G39 удобно использовать,
 если исходный программный контур расчитан с учетом радиуса инструмента,
 задавая в таблицу DL отклонения реального радиуса фрезы от расчетного
 (со знаком плюс или минус) можно выполнять обработку без корректировки УП.

@8.7.2.5  Модальная группа Е:
G-коды, определяющие корректировку пути фрезы в зависимости
  от радиуса инструмента

Функциями, которые управляют корректировкой пути фрезы по радиусу
 инструмента являются:

 ■ G41 -вызов коррекции пути слева от детали по направлению
        обработки в выбранной плоскости;
 ■ G42 -вызов коррекции пути справа от детали по направлению
        обработки в выбранной плоскости;
 ■ G40 -отмена коррекции пути, установленной функциями G41,G42.

 ■ G43 -увеличение длины вектора перемещения или радиуса дуги окружности
        на величину радиуса инструмента, заданную в текущем корректоре.
 ■ G44 -уменьшение длины вектора перемещения или радиуса дуги окружности
        на величину радиуса инструмента, заданную в текущем корректоре.
 ■ G45 -увеличение длины вектора перемещения или радиуса дуги окружности
        на удвоенную величину радиуса инструмента, заданную
        в текущем корректоре.
 ■ G46 -уменьшение длины вектора перемещения или радиуса дуги окружности
        на удвоенную величину радиуса инструмента, заданную
       в текущем корректоре.

Запрограммированное слово G40..G42 остается активным, пока оно
 не будет перезаписано другим кодом данной модальной группы.
Функции G43..G46 программируются только при активной G40,
 их действие распространяется на кадр, в котором они запрограммированы.
Исходной (устанавливаемой при включении и сбросе) является функция G40.

Определение плоскости интерполяции

Прежде чем вызвать коррекцию пути функциями G41,G42,
необходимо предварительно (функциями G17..G19) заказать плоскость,
 в которой будет производится корректировка.
В начале программы система автоматически устанавливает активной G17.

Построение эквидистантного контура

Заданный программистом исходный контур состоит из совокупности прямых
 и дуг окружности (примитивов).
При построении нового контура, эквидистантного заданному, система
 выполняет следующие действия:

 ■ к исходным точкам каждого примитива строятся нормали, по которым
   влево (G41) или вправо (G42) откладывается расстояние смещения R;
 ■ через полученные точки строятся новые примитивы;
 ■ производится расчет сопряжения новых примитивов
   (точка пересечения или встроенная часть окружности)

Расстояние смещения между контурами R заносится оператором в таблицу
 коррекции на инструмент (см. Глава 5).
Допустимый диапазон значений  -500.000..+500.000 мм.

Текущее активное значение R устанавливается путем программирования
 слова с адресом D, следующий за адресом числовой параметр указывает
 на номер ячейки в таблице парной коррекции на инструмент, в которой
 хранится значение смещения.

Примеры:
N1500  G42  D17  X-100 Y-200  F400
N1423  D0

Значение R из таблицы коррекции может быть также активизировано
 программированием следующей комбинации слов:

 T1.17 M06,

 где числовой параметр, стоящий при адресе Т за знаком "." (в данном
 примере 17) указывает на номер ячейки в таблице коррекции на инструмент,
 однако R примет значение смещения из таблицы только после ближайшей
 последующей команды смены инструмента М06.
 Таким образом для установки смещения следующие две формы
 программирования полностью идентичны:

 N4567  D2
 N4567  T1.2  M6

Количество ячеек, отведенное в таблице парной коррекции для хранения
 значений R находится в диапазоне 0..99.
В ячейке с индексом "0" хранится нулевое значение смещения, которое
 нельзя переустановить, тем самым, при программировании D0 или T1.0
 гарантируется установка текущего смещения R =0.

Вход в контур

Функции G41, G42 включают механизм построения эквидистантного контура.
Вход в контур произойдет в первом кадре (после G41, G42) в котором будет
 запрограммировано ненулевое перемещение по осям, составляющим плоскость
 интерполяции.
Перемещение выполняется по прямой линии из предыдущей точки в новую
 заданную точку,пересчитанную с учетом коррекции на радиус инструмента.
На момент входа в эквидистантный контур должны быть активны функции,
 устанавливающие линейное перемещение G0 или G1.

Вибирайте сторону и исходную точку так, чтобы прямая входа
 не пересекала траектории контура.

Следующие примеры иллюстрируют вход в контур с использованием
 различных примитивов:

Первый прямолинейный элемент.

N0100  G1 X10 Y10
N0101  G41  D1  X30  Y15
N0102  X45  Y35
N0103  X70

Первый круговой элемент.

N0100  G90 G0 F500
N0101  X100 Y60 Z-50
N0102  G41  D4
N0103  X50  Y60
N0104  G3   X100  Y10  I100  J60
N0105  X120 Y12.745    I100  J80

N0100  X30  Y10
N0101  G01 G42 D4 X30 Y55
N0102  G02 X70  Y40  I50  J40

Выход из контура

Функция G40 выключает механизм построения эквидистантного контура.
Выход из контура произойдет в первом кадре (после G40), в котором будет
 запрограммировано перемещение осей, составляющих плоскость интерполяции.
Перемещение выполняется по прямой линии из последней точки
 эквидистантного контура в заданную точку.
На момент выхода из эквидистантного контура должны быть активны функции,
 устанавливающие линейное перемещение G0 или G1.

Выбирайте точку выхода так, чтобы прямая не пересекала траектории контура.
Следующие примеры иллюстрируют выход из контура с использованием
 различных примитивов:

Последний прямолинейный элемент.

N0100  X70 Y35          активна G42
N0101  X45              с положительным значением R
N0102  X30  Y15         последний элемент контура
N0103  G40 X10 Y10      выход из контура

Последний круговой элемент.

N0101  X100  Y10 I100  J60      активна G42 с положительным значением R
N0102  X50  Y60  I100   J60     активна G02
N0103  G40                      выключение эквидистанты
N0104  G01  X100 Y60            кадр выхода

N0102  X70  Y40                 активна G41 с положительным значением R
N0101 G03 X30 Y55 I50  J40      последний кадр контура
N0100 G40 G1 X30 Y10            выключение эквидистанты и выход из контура

Замена коррекции

Замена коррекции осуществляется программированием адреса D при включенном
 механизме коррекции (активны функции G41 или G42).
Замена коррекции произойдет в первом кадре (после нового D) в котором
 будет запрограммировано ненулевое перемещение по осям, составляющим
 плоскость интерполяции.
Перемещение выполняется по прямой линии из последней точки контура с
 предыдущим смещением в точку контура с новым значением R, если знаки R
 не совпадают -замена коррекции приведет к смене стороны обхода контура.
В кадре замены коррекции должны быть активны функции, устанавливающие
 линейное перемещение G0 или G1.

Пример замены коррекции:

N020  D1                      активна коррекция G42 с положительным R1
N030  G1 X105 Y35  F500
N050  G3  X95  Y45  I95  J35
N060  G1  D2  X80             замена коррекции R2-положительное и R2 < R1
N070  G3  X70  Y35  I80 J35
N080  G1  X55
N090  Y60
N100  D3 X35                  замена коррекции R3-отрицательное и R3 < R2
N110  X20 Y35
N120  Y15

Смена стороны обхода G41-G42

Внутри одного контура обработки допустима смена стороны обхода,
 путем перезадания кода G41 на G42 и наоборот.
Смена стороны произойдет в первом кадре (после G41,G42) в котором будет
 запрограммировано ненулевое перемещение по осям, составляющим плоскость
 интерполяции.
Перемещение выполняется по прямой линии из последней точки текущего
 контура в точку контура с противоположной стороны от исходного,
 при этом значение смещения -R сохраняется прежним.
В кадре смены стороны обхода должны быть активны функции, устанавливающие
 линейное перемещение G0 или G1.

Пример смены стороны обхода контура:

N020  D1                      активна G42 с положительным значением R1
N030  G1 X105 Y35  F500
N050  G3  X95  Y45  I95  J35
N060  G1 G41 X80              смена стороны обхода контура G41
N070  G3  X70  Y35  I80 J35
N080  G1  X55
N090  Y60
N100  G42 X35                 смена стороны обхода контура G42
N110  X20 Y35
N120  Y15

Функции коррекции вектора перемещения в кадре

Функции G43..G45:
 ■ изменяют длину вектора перемещения, если задана линейная интерполяция,
   или радиус дуги окружности, если задана круговая интерполяция
   следующим образом:
         G43 -увеличивает на R;
         G44 -уменьшает на R;
         G45 -увеличивает на 2R;
         G46 -уменьшает на 2R;

 ■ действуют только в кадре, в котором они запрограммированы;
 ■ несовместимы с функциями G41..G42 и с функциями стандартных
   циклов G81..G89.

Если величина коррекции превышает длину вектора -направление
 вектора меняется на противоположное.

Пример программирования коррекции вектора перемещения в кадре:

N01  (UAO,1)
N02  X0 Y0 Z0
N04  G1 Z-10 F500
N05  G43 X50
N06  G43 G3  X0 Y-50 I0J0
N07  G1 Y-80

Ограничения при работе в режиме коррекции контура

В режиме включения коррекции контура (активны G41,G42)
недопустимо:

 ■ программировать функции смены плоскости интерполяции G17..G19;
 ■ программировать функцию G79;
 ■ программировать функции автоматических циклов G81..G89;
 ■ программировать функции коррекции вектора в кадре G81..G89;
 ■ программировать функцию смены инструмента М06, если в ее
   алгоритме предусмотрены перемещения осей;
 ■ программировать совместные перемещения по осям, составляющим плоскость
   интерполяции с любыми другими  осями,
   допускается (при активных G41,G42) программирование перемещений
   по любым осям, не охваченным коррекцией но не совместно с осями,
   по которым коррекция  выполняется, например:

     N210  G17
     N211  G1 G42  D1
     N212  X90  Y10                   здесь недопустимо
     N213  X80  Y40                   задавать оси  Z,A,B
     N215  Y60
     N214  Z50                        а здесь программировать
     N216  Z40  A10  B-10             оси X,Y (G17)
     N217  X60

 ■ программировать внутренний контур, в котором длина хотя бы одного
   смежного примитива типа "прямая" меньше величины смещения R;
 ■ программировать внутренний контур, в котором половина радиус хотя бы
   одного смежного примитива типа "окружность" меньше величины смещения R;
 ■ функции G43..G45 несовместимы с функциями G41..G42 и с функциями
   стандартных циклов G81..G89.

@8.7.2.6  Модальная группа F:
коды, определяющие систему измерения

Система измерения, в которой программируются адреса
X Y Z A B C U V W R I J K  определяется следующими кодами:

 ■ G70 - программирование в микрометрах (мкм);
 ■ G71 - программирование в миллиметрах (мм).

Запрограммированное слово G70..G71 остается активным,
 пока не будет перезаписано другим кодом данной модальной группы.
Исходной (устанавливаемой при включении и сбросе) является функция G71.

@8.7.2.7  Модальная группа G:
коды, определяющие стандартные фиксированные (автоматические) циклы

Автоматические циклы позволяют программировать одним кадром определенную
 последовательность перемещений и технологических действий, характерную
 для ряда операций обработки детали (сверление, расточка, нарезание резьбы
 метчиком).
Эта последовательность включаетв себя следующие шаги:

 1. перемещение на быстром ходу (по G00) в заданную точку;
 2. перемещение на быстром ходу, по оси совпадающей с осью инструмента,
    в координату "верхней плоскости", задаваемую адресом R;
 3. выполнение технологических функций;
 4. перемещение с рабочей подачей (установленной последней инструкцией F),
    по оси совпадающей с осью инструмента, в координату "нижней плоскости"
    задаваемую адресом Z;
 5. выполнение технологических функций;
 6. перемещение на быстром ходу или с рабочей подачей (установленной
    последней инструкцией F), по оси совпадающей с осью инструмента,
    в координату "исходной плоскости", если запрограммирована G98.
    в координату "верхней плоскости",  задаваемую адресом R,
    если запрограммирована G99.

Каждый автоматический цикл включается  соответствующей функцией G81..G89
(см. Таблицу 8.7.4) и выключается функцией G80.
Система фиксирует значение координаты Z на момент включения цикла
 независимо от активности кодов G98,G99 и считает его значением
 "исходной плоскости" на всем протяжении данного стандартного цикла.

В начале программы автоматически устанавливается активность G98.
Допускается программирование кодов G98,G99 по ходу стандартного цикла.

 Таблица 8.7.4
 Перечень операций автоматических циклов
 ┌─────────────────────────────────────────────────┐
 │  Код  │   Операция                              │
 ├─────────────────────────────────────────────────┤
 │  G80  │   Выключение автоматического цикла      │
 │  G81  │   Сверление                             │
 │  G82  │   Сверление с выдержкой времени         │
 │  G83  │   Сверление глубокого отверстия         │
 │  G84  │   Нарезание метчиком правой резьбы      │
 │  G85  │   Расточка                              │
 │  G86  │   Расточка с выключением шпинделя       │
 │  G87  │   Расточка с технологическим остановом  │
 │  G88  │   Нарезание метчиком левой резьбы       │
 │  G89  │   Расточка с выдержкой времени          │
 └─────────────────────────────────────────────────┘

Ограничения и замечания, касающиеся всех автоматических циклов

На момент программирования кода G81..G89 должны быть выполнены
 следующие условия:

Выключена коррекция на радиус инструмента (установлен код G40
 модальной группы E);

При включенном G81..G89 разрешается программировать
следующие G- коды:  G04,  G70..71, G80..G99.

При программировании в относительных величинах (по G91) значения,
 заданные кодом R берутся относительно текущего значения координаты Z.

Слово с адресом R программирует "верхнюю плоскость" обработки;
Слово с адресом Z программирует "нижнюю плоскость" обработки;
Значение "исходной плоскости" (назовем ее Z0) равно значению
 координаты Z при включении стандартного цикла;

Если на момент включения G81..G89 какой-либо из параметров R,Z
 не задан -ему присваивается текущее значение координаты Z.

Параметры R и Z могут свободно переустанавливаться (вместе или отдельно)
 в кадрах, охваченных текущим автоматическим циклом, формируя верхнюю
 и нижнюю плоскости обработки.
Запрограммированные значения R,Z остаются активным, пока не будут
 переустановлены.

При программировании автоматическим циклов необходимо выполнение условия
 Z0 >= R >= Z (Z0 больше или равно R, а R больше или равно Z).
Допустимо программирование R = Z, в этом случае шаги 3 и 5 не выполняются.

Если по ходу автоматического цикла при активности G99 программируется
 одиночный адрес R -система выходит на быстром ходу в новую точку
 "верхней плоскости" без отработки остальных шагов цикла.

Значения Z0, R, Z программируются с учетом текущей коррекции на длину
 инстумента (L), смена коррекции на длину инстумента по ходу
 автоматического цикла не допускается.

Выдержка времени в автоматических циклах G82, G89 программируется словом
 с адресом P, следующий за адресом числовой параметр устанавливает
 значение выдержки в диапазоне 0.01..99.99 сек.
Если на момент включения G82, G89 параметр P не задан -ему присваивается
 нулевое значение (P = 0) и выдержка времени не отрабатывается.
Запрограммированное значение P остается активным,
 пока не будет переустановлено.

Запрограммированное слово G80..G89 остается активным,
 пока не будет перезаписано другим кодом данной модальной группы.
Исходной (устанавливаемой при включении и сбросе) является функция G80.

G81  Сверление

Цикл включает в себя следующие операции:

 ■ перемещение в плоскости XY на быстром ходу (G00) в заданную точку;
 ■ перемещение на быстром ходу по оси Z  в координату "верхней плоскости",
   задаваемую адресом R;
 ■ перемещение с рабочей подачей (установленной последней инструкцией F),
   по оси Z в координату нижней плоскости, задаваемую адресом Z;
 ■ обратное перемещение на быстром ходу (G00),
   в координату "исходной плоскости", если активна функция G98 или
   в координату "верхней плоскости", задаваемую адресом R,
   если активна функция G99.

Пример программирования цикла G81.

N09  G98
N10  G90  S1000 M42  M3
N11  G81  X85  Y45  Z25  R55  F300
N12  G99  X45  Y30  Z15  R40
N13  X25
N14  G80 Z60
N15  G00 X150 Y0

G82  Сверление с выдержкой времени

Цикл включает в себя следующие операции:

 ■ перемещение в плоскости XY на быстром ходу (G00) в заданную точку;
 ■ перемещение на быстром ходу по оси Z в координату "верхней плоскости",
   задаваемую адресом R;
 ■ перемещение с рабочей подачей (установленной последней инструкцией F),
   по оси Z в координату нижней плоскости, задаваемую адресом Z;
 ■ выдержка времени свободного резания, задаваемое адресом P (сек);
 ■ обратное перемещение на быстром ходу (G00),
   в координату "исходной плоскости", если активна функция G98 или
   в координату "верхней плоскости", задаваемую адресом R,
   если активна функция G99.

Пример программирования цикла G82.

N09  G98
N10  G90  S1000 M42  M3
N11  G82  X85  Y45  Z25  R55  F300
N12  G99  X45  Y30  Z15  R40
N13  X25 Р5
N14  G80 Z60
N15  X150 Y0 М05

G83  Сверление глубокого отверстия

В программировании данного цикла кроме указанных выше адресов
 задействован вспомогательный адрес К.
Слово с адресом К задает шаг, на который будет последовательно
 уменьшаться значение R, пока текущая координата не достигнет координаты
 нижней плоскости (Z). Числовой параметр при адресе К должен принимать
 только положительные значения.
Если на момент включения G83 параметр K не задан -ему присваивается нуле-
 вое значение. Если К = 0, выполняется только пункт 1, указанного цикла.
Запрограммированное значение К остается активным,
 пока не будет переустановлено.
Если nK (n- число шагов) не кратен R-Z, тогда последнее перемещение
 выполняется на шаг R-nK-Z.

Цикл включает в себя следующие операции:
 ■ перемещение в плоскости XY на быстром ходу (G00) в заданную точку;
 ■ перемещение на быстром ходу по оси Z  в координату "верхней плоскости",
   задаваемую адресом R;
 ■ перемещение с рабочей подачей (установленной инструкцией F),
   по оси Z в координату R-K;
 ■ обратное перемещение на быстром ходу по оси Z в координату
   "верхней плоскости", задаваемую адресом R;
 ■ перемещение на быстром ходу (G00), по оси Z в координату R-K+1;
 ■ перемещение с рабочей подачей по оси Z в координату R-2K;
   и. т. д.  до достижения координаты нижней плоскости Z;
 ■ обратное перемещение на быстром ходу (G00),
   в координату "исходной плоскости", если активна функция G98 или
   в координату "верхней плоскости", задаваемую адресом R,
   если активна функция G99.

Пример цикла сверления глубокого отверстия

N10  G98
N11  G00  X150 Y0 Z110  S1000 M42  M3
N12  G83  X65  Y45  Z20  R95  K30  F300
N13  G80  X150 Y0 М05

G84  Нарезание метчиком правой резьбы

Цикл включает в себя следующие операции:
 ■ перемещение в плоскости XY на быстром ходу (G00) в заданную точку;
 ■ перемещение на быстром ходу по оси Z  в координату "верхней плоскости",
   задаваемую адресом R;
 ■ включение шпинделя в направлении вращения по часовой стрелке (М03),
   частота вращения должна быть предварительно задана кодом S;
 ■ перемещение с рабочей подачей (установленной последней инструкцией F),
   по оси Z в координату нижней плоскости, задаваемую адресом Z;
 ■ включение шпинделя в направлении вращения против часовой стрелки (М04);
 ■ обратное перемещение перемещение с рабочей подачей (установленной
   инструкцией F), по оси Z  в координату "верхней плоскости", задаваемую
   адресом R;
 ■ перемещение на быстром ходу (G00), в координату "исходной плоскости",
   если активна функция G98.
 ■ останов шпинделя (М05).

Программист задает частоту вращения шпинделя (кодом S) и рассчитывает
 значения рабочей подачи (F) по следующей формуле:
 F (мм/мин) = шаг резьбы (мм/об) *  S (об/мин)

Обратите внимание, команды управления шпинделем являются составной частью
 операций цикла G84 -программировать функции М03..М05 нет необходимости.
Пример цикла нарезания правой резьбы метчиком

N10  G99
N11  G00  X150 Y10  Z70  S100 M41
N12  G84  X105 Y45  Z35  R65  F100
N13  X65  Y30  Z30  R50
N14  R65
N15  G98 X30 Z35
N16  G80 G00 X150 Y0

G85  Расточка

Цикл включает в себя следующие операции:
 ■ перемещение в плоскости XY на быстром ходу (G00) в заданную точку;
 ■ перемещение на быстром ходу по оси Z  в координату "верхней плоскости",
   задаваемую адресом R;
 ■ перемещение с рабочей подачей (установленной последней инструкцией F),
   по оси Z в координату нижней плоскости, задаваемую адресом Z;
 ■ обратное перемещение с рабочей подачей (установленной инструкцией F),
   по оси Z  в координату "верхней плоскости", задаваемую адресом R;
 ■ перемещение на быстром ходу (G00), в координату "исходной плоскости",
   если активна функция G98.

Пример цикла расточки G85.

N10  G99 G1 X150 Y100 Z70
N11 S1000 M42 M3
N12  G85  X100  Z10  R55  F400
N13  R70
N14  X30  Y30  Z10  R55
N15  R70
N16  G80 X150 Y0 М05

G86  Расточка с выключением шпинделя

Цикл включает в себя следующие операции:
 ■ перемещение в плоскости XY на быстром ходу (G00) в заданную точку;
 ■ перемещение на быстром ходу по оси Z  в координату "верхней плоскости",
   задаваемую адресом R;
 ■ включение шпинделя в направлении вращения по часовой стрелке (М03),
   частота вращения должна быть предварительно задана кодом S;
 ■ перемещение с рабочей подачей (установленной последней инструкцией F),
   по оси Z в координату нижней плоскости, задаваемую адресом Z;
 ■ останов шпинделя (М05);
 ■ обратное перемещение с рабочей подачей (установленной инструкцией F),
   по оси Z в координату "верхней плоскости", задаваемую адресом R;
 ■ перемещение на быстром ходу (G00), в координату "исходной плоскости",
   если активна функция G98.

Пример цикла расточки G86.

N10  G98 G0 X150 Y100 Z70
N11 S1000 M41                          задавать М03 не надо
N12  G86  X100  Z10  R55  F400         шпиндель включается
N13  X30  Y30  Z10                     и выключается в цикле
N14  G80
N15  X150 Y0

G87  Расточка с технологическим остановом

Цикл включает в себя следующие операции:
 ■ перемещение в плоскости XY на быстром ходу (G00) в заданную точку;
 ■ перемещение на быстром ходу по оси Z  в координату "верхней плоскости",
   задаваемую адресом R;
 ■ включение шпинделя в направлении вращения по часовой стрелке (М03),
   частота вращения должна быть предварительно задана кодом S;
 ■ перемещение с рабочей подачей (установленной последней инструкцией F),
   по оси Z в координату нижней плоскости, задаваемую адресом Z;
 ■ технологический останов программы (М00);
 ■ обратное перемещение с рабочей подачей (установленной инструкцией F),
   по оси Z в координату "верхней плоскости", задаваемую адресом R;
 ■ перемещение на быстром ходу (G00), в координату "исходной плоскости",
   если активна функция G98.

Пример цикла расточки G87.

N10  G98 G0 X150 Y100 Z70
N11 S1000 M41                          задавать М03 не надо
N12  G87  X100  Z10  R55  F400         шпиндель включается в цикле,
N13  X30  Y30  Z10                     выключается по М00,
N14  G80                               включается автоматически
N15  X150 Y0                           с продолжением программы

G88  Нарезание метчиком левой резьбы

Цикл включает в себя следующие операции:
 ■ перемещение в плоскости XY на быстром ходу (G00) в заданную точку;
 ■ перемещение на быстром ходу по оси Z  в координату "верхней плоскости",
   задаваемую адресом R;
 ■ включение шпинделя в направлении вращения против часовой стрелке (М04),
   частота вращения должна быть предварительно задана кодом S;
 ■ перемещение с рабочей подачей (установленной последней инструкцией F),
   по оси Z в координату нижней плоскости, задаваемую адресом Z;
 ■ включение шпинделя в направлении вращения против часовой стрелки (М04);
 ■ обратное перемещение перемещение с рабочей подачей (установленной
   инструкцией F), по оси Z  в координату "верхней плоскости", задаваемую
   адресом R;
 ■ перемещение на быстром ходу (G00), в координату "исходной плоскости",
   если активна функция G98.
 ■ останов шпинделя (М05).

Программист задает частоту вращения шпинделя (кодом S) и рассчитывает
 значения рабочей подачи (F) по следующей формуле:
 F (мм/мин) = шаг резьбы (мм/об) *  S (об/мин)

Обратите внимание, команды управления шпинделем являются составной частью
 операций цикла G88 -программировать функции М03..М05 нет необходимости.
Пример цикла нарезания левой резьбы метчиком

N10  G99
N11  G00  X150 Y10  Z70  S100 M41
N12  G88  X105 Y45  Z35  R65  F100
N13  X65  Y30  Z30  R50
N14  R65
N15  G98 X30 Z35
N16  G80 G00 X150 Y0

G89  Расточка с выдержкой времени

Цикл включает в себя следующие операции:
 ■ перемещение в плоскости XY на быстром ходу (G00) в заданную точку;
 ■ перемещение на быстром ходу по оси Z  в координату "верхней плоскости",
   задаваемую адресом R;
 ■ перемещение с рабочей подачей (установленной последней инструкцией F),
   по оси Z в координату нижней плоскости, задаваемую адресом Z;
 ■ выдержка времени свободного резания,  задаваемое адресом P (сек);
 ■ обратное перемещение с рабочей подачей (установленной инструкцией F),
   по оси Z  в координату "верхней плоскости", задаваемую адресом R;
 ■ перемещение на быстром ходу (G00), в координату "исходной плоскости",
   если активна функция G98.

Пример цикла расточки G89.

N10  G98 G1 X150 Y100 Z70
N11 S1000 M42 M3
N12  G89  X100  Z10  R55  Р3.5  F400
N14  X30  Y30  Z10  R55
N16  G80 X150 Y0 М05

@8.7.2.8  Модальные группы H,I:

G- коды, определяющие тип перемещения:
 ■ абсолютное;
 ■ инкрементное;
 ■ с привязкой к нулю станка.

G- коды, определяющие тип перемещения устанавливают способ пересчета точек
 траектории, задаваемых адресами X Y Z A B C U V W I J R.

Модальная группа Н объединяет следующие функции:
G90 - программирование в абсолютной системе координат;
G91 - инкрементное программирование.

Запрограммированное слово G90..G91 остается активным,
 пока не будет перезаписано другим кодом данной модальной группы.
Исходной (устанавливаемой при включении и сбросе) функцией
 модальной группы H является функция G90.

Модальная группа I содержит единственную функцию G79, устанавливающую
 программирование в станочной системе координат.
Область действия функции G79 распространяется только на тот кадр,
в котором она задана. При включении и сбросе G79 не активна.

Если запрограммирована функция G91- каждая следующая точка рассчитывается
 относительно предыдущей, в данном случае безразлично, в какой системе
 координат ведется работа.
Если запрограммирована функция G90 - каждая точка рассчитывается
 относительно точки текущей системы координат.
Текущая система координат устанавливается инструкцией (UAO,n) (см. 8.9)
 или программированием функции G79.

Функция G79, модальной группы I позволяет в рамках одного кадра,
 в котором она задана временно заблокировать инструкцию (UAO,n) и
 установить систему координат совпадающую с системой координат станка.

Пример программирования G- кодов, определяющие тип перемещения

%
N0  X0  Y0              идем в ноль станка
N1  (UAO,1)             устанавливаем новую систему координат
N2  X0  Y0              идем в ноль новой системы UAO,1
N3  X20  Y50            перемещения в абсолютных координатах системы UAO,1
N4  G91
N5  X-80                перемещения в инкрементных
N6  Y-100               координатах
N7  G90 X60             снова в абсолютных координатах системы UAO,1
N8  G79  X0  Y-60       в системе станка
N9  X0  Y0              снова в абсолютных координатах системы UAO,1

@8.7.2.9  Модальная группа J:
коды, определяющие атрибуты динамического режима

Модальную группу J составляют следующие функции:

G09 - задает останов движения в конце кадра (значение вектора скорости
      в конце перемещения по данному кадру устанавливается равной 0).
G04 - задает останов движения в конце кадра с программируемой выдержкой
      времени останова.

По окончании выдержки времени выполнение программы будет продолжено без
 каких-либо специальных команд. Временем выдержки является текущее
 значение системной переменной TMR.
Значение TMR программируется инструкцией (TMR, n ), где n - время выдержки
 (см. 8.9), или задается из меню "Установки" (см. Глава 5).
Диапазон допустимых значений переменной TMR- 0..255 сек.

Программирование функций G09, G04 перебивает нулевым значением скорость
 в конце элемента текущего кадра, установленную блоком автоматического
 расчета скоростей при активных G27,G28 (см. 8.7.2, модальная группа С).

Программирование функции G09 при активных G00 или G29 не имеет смысла.
Область действия функций G04,G09 распространяется только на тот кадр,
 в котором они запрограммированы.
При включении и сбросе G04,G09 не активны.

@8.7.2.10 Модальная группа L:
G- коды, определяющие кодирование скорости подачи

В модальную группу L входит единственная функция:
G94- устанавливает кодирование подачи в единицах измерения- мм/мин.
Переключения функций G70,G71 (см. 8.7.2, модальная группа F)
на кодирование подачи не влияют.
G94 является исходной (устанавливаемой при включении и сбросе)
функцией модальной группы L.

@8.7.2.11 Модальная группа M:
G- коды, определяющие кодирование скорости шпинделя

В модальную группу M входит единственная функция:
G97- устанавливает кодирование скорости шпинделя в единицах
 измерения- об/мин.
Переключения функций G70,G71 (см. 8.7.2, модальная группа F)
на кодирование скорости шпинделя не влияют.
G97 является исходной (устанавливаемой при включении и сбросе)
функцией модальной группы М.

@8.7.2.12 Модальная группа N:
G- коды, управляющие отводом инструмента в циклах G81..G89.

В модальную группу входят следующие функции:
 ■ G98- устанавливает позицию отвода в стандартных циклах равной
   значению координаты Z на момент включения цикла.
 ■ G99 - устанавливает позицию отвода в стандартных циклах равной
   значению, запрограммированному адресом R.

Запрограммированное слово G98..G98 остается активным,
 пока не будет перезаписано другим кодом данной модальной группы.
G98 является исходной (устанавливаемой при включении и сбросе) функцией
 модальной группы N.

@8.7.3  Программирование адреса  D

Программированием слова с адресом D устанавливаются в активное состояние
 параметры R,L из таблицы парной коррекции на инструмент:
 ■ R- коррекция на радиус инструмента;
 ■ L- коррекция на длину инструмента.

Следующий за адресом числовой параметр указывает на номер ячейки в таблице
 парной коррекции, в которой хранятся значения R,L.
Диапазон значений числового параметра- 0..99.

Значения R,L заносятся в таблицу парной коррекции:
 ■ в меню "Установки" (см. Глава 5);
 ■ в файле конфигурации BASE.INI (см. Приложение А);
 ■ в режиме командной строки (MDI), с помощью расширенных Е-параметров.
Диапазон допустимых значений параметров R,L  - (9999.999 мм.

В ячейке с индексом "0" хранятся нулевые значения R,L которые нельзя
 переустановить из системы, тем самым, при программировании D0
 гарантируется работа с отключенной парной коррекцией.

Коррекция на длину инструмента L, будет отработана с момента активизации
 кодом D, без каких-либо дополнительных команд, во всех кадрах, задающих
 перемещение по оси совпадающей с осью шпинделя (Z,R).

Управление включением коррекции на радиус инструмента осуществляется
функциями G40..G46 (см. 8.7.2, модальная группа Е).
Коррекция на радиус инструмента заданная функциями:
 ■ G41..G42 выполняется только в плоскости интерполяции, установленной
   кодами G17..G19.
 ■ G43..G46 для линейных кадров может выполняется и в пространстве.

Система автоматически устанавливает значение D0, выключая тем самым
 парную коррекцию:
 ■ при включении;
 ■ на момент начала управляющей программы;
 ■ при выполнении операций сброса (см. Глава 3).

Пример использования коррекции на длину инструмента

%
N001  (UAO, 1)            выбор системы координат
N002  X0  Z0              идем в 0 в системе UAO,1
N003  X10  Z100           коррекция по L выключена, т.к.
N004  Z80                 на начало УП установлена D0
N005  D1                  активизируем коррекцию (L=+10)
N006  X20                 в этом кадре нет пути по Z
N007  X40  Z50            а здесь идем с коррекцией +10
N008  G91  D2  X10        смена коррекции (L= -10)
N009  Z0                  отработана новая коррекция -10
N010  G90  X60  Z100      идем с -10
N011  F400  S1000  M03
N012  G81  D3             смена коррекции (L=+20)
N013  X80  Z20  R50       цикл сверления с +20
N014  D0 X100 Z20 R50     и с выключенной коррекцией
N015  G80
N016  X125  M05

@8.7.4  Программирование адресов X,Y,Z,A,B,C,U,V,W

Слово с адресом  XYZABCUVW  задает перемещение по соответствующей
координатной оси.

Программирование числового параметра обязательно, каким бы не было его
 значение.Числовой параметр может программироваться как с десятичной
 точкой, так и без нее. Значения числового параметра могут быть указаны
 либо явно, либо с использованием основных E- параметров (см. 8.8.1).
Программирование характеров между адресом и символом Е недопустимо.
Диапазон значений числового параметра ограничен 15 значащими цифрами.

Перемещения могут быть заданы в  миллиметрах (G71) или в микрометрах (G70).
Последовательность программирования адресов в кадре -любая.

Примеры программирования перемещений по координатным осям

N004 A0B0C0X0Y0Z0U0V0W0            число обязано быть
N821  G71  X-100.0000  Y20.00      в мм с десятичной точкой
N821  G71  X-100  Y20              без нее
N100  G70  X-26.046 A253.0000      в мкм с десятичной точкой
N100  G70  X-25345  A253           без нее
N211  XE45  YE11  AE199            с основными Е- параметрами
N400  G71 X-.567  Z.800            можно и так
N400  G71 X-0.567 Z0.800           то- же самое
N320  G70 U2374.000 W-11.211       в мкм можно с точкой
N013  B-10 Y-50 X100               последовательность адресов произвольная

@8.7.5  Программирование адреса  P

Слово с адресом  P задает выдержку времени свободного резания в
 автоматических циклах G82, G89.

Следующий за адресом числовой параметр устанавливает
значение выдержки в диапазоне 0.01..99.99 сек.

Если на момент включения G82, G89 параметр P не задан -ему присваивается нулевое значение (P = 0) и выдержка времени не отрабатывается.
Может программироваться с числом или основным Е -параметром.
Запрограммированное значение P остается активным, пока не будет переустановлено.
Примеры (см. 8.7.2 модальная группа G).

@8.7.6  Программирование адреса  R

Слово с адресом R программирует плоскость отвода инструмента
 в автоматических циклах G81..G89.

Может программироваться с числом или основным Е -параметром (см. 8.8).
Диапазон значений числового параметра, при явном задании, ограничен
 пятнадцатью значащими цифрами.
Программируется в  миллиметрах или в микрометрах, в зависимости от
 активности кодов модальной группы F (G70..G71).
Примеры (см. 8.7.2 модальная группа G).

@8.7.7  Программирование адресов I,J

Слово с адресом I J программирует координаты центра дуги в круговой
 интерполяции (G02,G03).

Значения числового параметра могут задаются явно, либо с использованием
 основных E- параметров. Диапазон значений числового параметра, при явном
 задании, ограничен 15 значащими цифрами.

Программируется в миллиметрах или в микрометрах в зависимости
 от активности кодов модальной группы F (G70..G71).

Круговая интерполяция выполняется в плоскости, устанавливаемой кодами
 G17..G19 модальной группы В.

Адреса I,J программируют координаты центра дуги независимо от выбранной
 плоскости интерполяции. Адрес I программирует точку центра по первой оси,
 составляющей плоскость (абсцисса). Адрес J программирует точку центра по
 второй оси,  составляющей плоскость (ордината).
Программирование адресов I,J обязательно.
Пример (см. 8.7.2 модальная группа А).

@8.7.8  Программирование адреса  К

Слово с адресом К программирует шаг, с которым выполняются перемещения
 в автоматическом цикле сверления глубокого отверстия (G83).
Числовой параметр при адресе К принимает только положительные значения.

Может программироваться с числом или основным Е -параметром (см. 8.8).
Диапазон значений числового параметра, при явном задании,
 ограничен пятнадцатью значащими цифрами.

Программируется в миллиметрах или в микрометрах в зависимости от
 активности кодов модальной группы F (G70..G71).
Примеры (см. 8.7.2 модальная группа G).

@8.7.9  Программирование адреса  F

Слово с адресом F программирует скорость подачи с которой выполняются
 все линейные (G01) и круговые (G02, G03) перемещения.

При задании движения одновременно по нескольким осям подача выражает
 скорость перемещения по вектору. Значение F становиться активным,
 начиная с кадра где оно запрограммировано и до тех пор пока не будет
 перезаписано.
 Единицы измерения параметра F определяются установками кодов модальной
 группы L. В настоящий момент система поддерживает только программирование
 подачи в мм/мин  (по коду G94), независимо от активности кодов модальной
 группы F (G70..G71).

Диапазон допустимых значений подачи устанавливается для каждой оси в
 файле конфигурации системы BASE.INI (см. Приложение А).
При программировании движения по нескольким осям с разными допустимыми
 значениями подачи система автоматически устанавливает такую подачу по
 вектору, чтобы подача ни по одной оси не вышла бы за пределы
 установленного для нее диапазона.

Может программироваться с числом или основным Е -параметром.
Диапазон значений числового параметра, при явном задании,
 ограничен пятнадцатью значащими цифрами.

При включении и сбросе, а также на начало файла устанавливается
 значение F = 240 мм/мин.

Расположенный на пульте оператора потенциометр коррекции подачи
 (см. Глава 2) позволяет изменять значение  программируемое кодом F
 по всей траектории движения в диапазоне 10-110% от заданной величины.

@8.7.10 Программирование адреса  S

Слово с адресом S программирует скорость вращения шпинделя.

Заданное значение S действует, начиная с кадра, где оно запрограммировано,
 до тех пор, пока не будет перезаписано.

Программирование адреса S - не команда на включение шпинделя,
 а установочная операция в, результате которой в системную переменную
 S заносится значение скорости, с которой будет запущен шпиндель.
Управление шпинделем осуществляется функциями М, выполняющими
 включение-выключение шпинделя по заданному алгоритму (см. 8.7.12).

Единицы измерения параметра S определяются установками кодов модальной
 группы М. В настоящий момент система поддерживает только
 программирование скорости вращения шпинделя в об/мин (по коду G97).

Диапазон допустимых значений S устанавливается файле конфигурации системы
BASE.INI (Приложение А) для каждой ступени передаточной коробки шпинделя.

При запуске шпинделя:
 ■ если ступень передаточной коробки шпинделя включена явно
   (кодами М41..М46) -система проверяет значение S на соответствие
   диапазону данной ступени, если  значение S не находится в
   установленном диапазоне -блокирует запуск шпинделя.
 ■ если установлен код автоматического выбора ступени (М40)-
   система автоматически устанавливает ступень, диапазон которой
   соответсвует заданному коду S, и запускает шпиндель.

Может программироваться с числом или целочисленным Е -параметром (Е0..Е9).
При включении и сбросе, а также на начало файла устанавливается
 значение S = 0.

Расположенный на пульте оператора потенциометр коррекции скорости шпинделя
 (см. Глава 2) позволяет изменять значение, программируемое кодом S по
 всей траектории движения в диапазоне 75-125% от заданной величины.

На станках где управление скоростью вращения шпинделя выполняется
 механически -код S не используется.

@8.7.11 Программирование адреса  T

Программирование слова с адресом Т определяет номер инструмента,
 а также связанный с ним номер ячейки в таблице парной коррекции
 на инструмент DL где:
 ■ D -коррекция на радиус инструмента;
 ■ L- коррекция на длину инструмента.

Параметр, определяющий номер инструмента отделен от параметра
 определяющего номер коррекции знаком "."

Номер инструмента -целое положительное число, диапазон допустимых
 значений устанавливается файле конфигурации системы BASE.INI
 (см. Приложение А) для каждого конкретного станка;
Может программироваться с числом или целочисленным Е -параметром (Е0..Е9).
Программирование адреса Т -установочная операция в, результате которой
 в системную переменную заносится значение номера инструмента, который
 будет установлен в шпиндель последующей командой М06 (см. 8.7.12).

Номер парной коррекции- целое положительное число, задает в системную
 переменную номер ячейки таблицы DL,  значения коррекции инструмента,
 записанные в данной ячейке станут активными после выполнения ближайшей
 команды смены инструмента М06.
Диапазон допустимых значений 0..99;
Может программироваться с числом или целочисленным Е -параметром (Е0..Е9).
Не обязательно программируется с адресом Т.

Примеры программирования адреса Т:
T8.8   T5.99   T1   TЕ2   TЕ0.Е9

@8.7.12 Программирование адреса  М

Программирование слова с адресом М вызывает на отработку одну из функций
 станочной автоматики. Функции станочной автоматики (см. Приложение В)
 составляются программистом-наладчиком на этапе привязки системы, их
 состав и количество зависит от характеристик конкретного станка.

Числовой параметр при адресе М задает порядковый номер функции, которую
 надо исполнить. Диапазон допустимых значений параметра 0..99 однако
 заданы могут быть только значения функций, определенные программистом-
 наладчиком для данного станка.

Если в кадре вместе с функциями М задано перемещение-одни функции
 будут отработаны до начала движения, другие после его завершения,
 указанный признак устанавливает программист при написании функций.

В одном кадре можно программировать 0..3 функций М.
Может программироваться с числом или целочисленным Е -параметром (Е0..Е9).

Функция М06 вместе с установкой инструмента, заданного кодом Т,
 одновременно активизирует номер, связанной с инструментом парной
 коррекции, если он был задан с кодом Т.

В таблице 8.7.5 приведен набор операций М, наиболее часто используемый
 в управлении станками. Полный перечень операций М для Вашего станка
 с описанием алгоритмов работы приведен в Приложении В.

 Таблица 8.7.5  Операции М




 ┌───────────────────────────────────────────────────────────────────────┐
 │ Код │ Движение │ Чем отменить │ Действие                              │
 ├───────────────────────────────────────────────────────────────────────┤
 │ М00 │ После    │ Начало цикла │ Технологический останов программы     │
 │     │          │              │  (движение, шпиндель, охладитель      │
 │     │          │              │  выключены, выход в режим HOLD)       │
 │ М01 │ После    │ Начало цикла │ Факультативный останов программы      │
 │     │          │              │  (если USO =1, М01 обрабатывается как │
 │     │          │              │  М00, если USO =0 -М01 пропускается)  │
 │ М02 │ После    │       -      │ Принудительное завершение программы   │
 │ М03 │ Перед    │ М04, М05     │ Включение вращения шпинделя           │
 │     │          │ М14, М19     │  по часовой стрелке                   │
 │ М04 │ Перед    │ М03, М05     │ Включение вращения шпинделя           │
 │     │          │ М14, М19     │  против часовой стрелки               │
 │ М05 │ После    │ М03, М04     │ Отключение шпинделя                   │
 │     │          │ М13, М14     │  и охладителя                         │
 │ М06 │ После    │      -       │ Смена инструмента                     │
 │ М07 │ Перед    │ М09          │ Включение охлаждения воздухом         │
 │ М08 │ Перед    │ М09          │ Включение охлаждения жидкостью        │
 │ М09 │ После    │ М07, М08     │ Отключение охлаждения                 │
 │ М13 │ Перед    │ М04, М05,    │ Включение вращения шпинделя по        │
 │     │          │ М14, М19     │  часовой стрелке, вкл. охлаждения     │
 │ М14 │ Перед    │ М03, М05,    │ Включение вращения шпинделя против    │
 │     │          │ М13, М19     │  часовой стрелки, вкл. охлаждения     │
 │ М19 │ Перед    │ М03,М04,М05, │ Останов шпинделя и                    │
 │     │          │ М13, М14     │  ориентация по углу                   │
 │ М40 │ Перед    │ М41,М42,М43, │ Устанавливает режим                   │
 │     │          │ М44,М45,М46  │  автоматического выбора ступени       │
 │ М41 │ Перед    │ М42,М43,М44  │ Диапазон передач шпинделя,            │
 │     │          │ М45,М46,М40  │  ступень 1                            │
 │ М42 │ Перед    │ М41,М43,М44  │ Диапазон передач шпинделя,            │
 │     │          │ М45,М46,М40  │  ступень 2                            │
 │ М43 │ Перед    │ М41,М42,М44  │ Диапазон передач шпинделя,            │
 │     │          │ М45,М46,М40  │  ступень 3                            │
 │ М44 │ Перед    │ М41,М42,М43  │ Диапазон передач шпинделя,            │
 │     │          │ М45,М46,М40  │  ступень 4                            │
 │ М45 │ Перед    │ М41,М42,М43  │ Диапазон передач шпинделя,            │
 │     │          │ М44,М46,М40  │  ступень 5                            │
 │ М46 │ Перед    │ М41,М42,М43  │ Диапазон передач шпинделя,            │
 │     │          │ М44,М45,М40  │  ступень 6                            │
 │ М60 │ После    │      -       │ Смена детали                          │
 └───────────────────────────────────────────────────────────────────────┘

@8.7.13 Программирование адреса  Н

Программирование слова с адресом Н вызывает на отработку одну из
 вспомогательных функций управления станочной автоматикой.
Вспомогательные функции станочной автоматики (см. Приложение В)
 составляются программистом -наладчиком на этапе привязки системы,
 их состав и количество зависит от характеристик конкретного станка.

Числовой параметр при адресе Н задает порядковый номер функции,
 которую надо исполнить. Диапазон допустимых значений параметра 0..99
 однако заданы могут быть только значения функций, определенные
 программистом-наладчиком для конкретного станка.

Если в кадре вместе с функциями Н задано перемещение-одни функции
 будут отработаны до начала движения, другие после его завершения,
 указанный признак устанавливает программист при формировании функций
 управления автоматикой станка.

В одном кадре можно программировать 0..1 функцию Н.
Может программироваться с числом или целочисленным Е -параметром (Е0..Е9).
Вспомогательные функции Н нельзя программировать в УП, они разработаны для
 наладчика и отрабатываются только в режиме ручного ввода MDI (Глава 3).

Полный перечень операций Н для Вашего станка с описанием алгоритмов работы
 приведен в Приложении В.

@8.8  ПАРАМЕТРИЧЕСКОЕ ПРОГРАММИРОВАНИЕ

В системе предусмотрено два различных типа переменных:
 ■ основные -массив целых и вещественных переменных, предоставляемый
   программисту -технологу для составления управляющих программ;
 ■ расширенные -переменные через которые обеспечивается доступ к
   таблицам точек привязки (UAO), корректоров (DL), а также к некоторым
   системным переменным.

Оба типа переменных программируются как слово с адресом Е, но в
 расширенных переменных между адресом и числовым параметром присутствует
 специальный дополнительный код (8.8.2).
Просмотреть текущие значения Е- параметров можно в функциональных режимах
 "Установки" (см. Глава 5), "Редактор" (см. Глава 7), либо отобразить
  Е- параметр на экране при помощи команды DIS.

@8.8.1  Основные переменные

Для хранения и передачи данных в системе "АЛЬФА" организован специальный
 массив переменных, назовем их Е- параметры. Они позволяют
 программировать геометрические и технологические данные цикла обработки,
 применяются в математических и тригонометрических операциях, а также в
 вычислениях значений выражений.

Записываются как слово с адресом E, за которым следует числовой параметр
 (индекс), указывающий номер данной переменной в массиве.
Диапазон числового кода 0..199, (может быть расширен до 65535).

Примеры программирования слов с адресом Е:
E46  Е199  E0  E99  Е145.

Первые десять параметров (Е0..Е9) определены как целые числа (LongInt)
 с диапазоном значений -2147483647..+2147483647. Остальные параметры
 (E10..E99) определены как действительные 64-х разрядные 15-ти знаковые
 числа (Double) с диапазоном значений -2e308..+2e308.

Переменные с индексами Е0..Е99 автоматически обнуляются:
 ■ при включении системы;
 ■ в начале каждой УП при компиляции и отработке.
 ■ в операциях сброса "Параметры в исходное" и ESC.

Переменные с индексами Е100..Е199 сохраняют свои значения, пока не будет
 выполнено новое присвоение, при выключении системы значения указанных
 переменных сохраняются в файле конфигурации BASE.INI.

Основные E-параметры можно использовать в управляющей программе
 и в режиме ручного ввода (MDI) в качестве:
 ■ операторов присваивания (E40 = 25);
 ■ в выражениях операторов присваивания (E22 =SQR(E56+41.23)-E14);
 ■ в качестве переменных параметров в кадрах ISO (XE76 GE0 FE50);
 ■ в выражениях оператора DIS (DIS, 'Длина =',Е20+Е22-Е50).

@8.8.2  Расширенные переменные

Расширенные переменные предназначены:
 ■ для доступа к ячейкам таблицы привязки UAO;
 ■ для доступа к ячейкам таблицы коррекции на инструмент DL;
 ■ для доступа к текущим системным параметрам.

Программируются в управляющей программе:
 ■ в выражениях операторов присваивания (E22 =SQR(ED56+ЕА4)-EХ);
 ■ в выражениях оператора DIS (DIS, 'Длина =',ЕZ20+ЕZ-ЕL50,'N=',EK).

в режиме ручного ввода (MDI) в качестве:
 ■ операторов присваивания, кроме текущих системных переменных (ED40=25);
 ■ в выражениях операторов присваивания (EL22 =EZ-E40+EZ4/2);
 ■ в выражениях оператора DIS (DIS, 'Z Длина =',ЕZ).

Формат расширенных переменных для работы с таблицей UAO:
Е[буквенный адрес оси][номер ячейки таблицы UAO]
например:
ЕХ58 -значение ячейки 58, поля координаты Х, таблицы UAO;
EZ2   -значение ячейки 2, поля координаты Z, таблицы UAO;
ЕА99  -значение ячейки 99, поля координаты А, таблицы UAO;

Формат расширенных переменных для работы с таблицей DL:
Е[буквенный адрес D или L][номер ячейки таблицы DL]
например:
ЕD34 -значение ячейки 34, поля D (коррекция на радиус), таблицы DL;
ЕL99  -значение ячейки 99, поля L (коррекция на длину), таблицы DL.

Доступ к текущим системным переменным:
Е[буквенный адрес оси]
например:
ЕХ -текущее значение координаты Х, взятое в станочной системе координат;
ЕY -текущее значение координаты Y, взятое в станочной системе координат;
ЕA -текущее значение координаты A, взятое в станочной системе координат;
ЕN -номер текущей системы отсчета (UAO);
ЕК -номер текущего активного корректора на длину и радиус инструмента DL.
В текущие переменные нельзя записать значение, их можно только читать.

@8.8.3  Кадры присваивания

Е- параметры получают значения в кадрах присваивания,
 имеющих следующий формат:

Еn =  "выражение"         -для основных переменных (8.8.1);
Е<адрес>n = "выражение"   -для расширенных переменных (8.8.2);

где "выражение"- совокупность арифметических операций, функций и
 операндов (Е- параметров или числовых констант), результатом выражения
 является число, которое будет сохранено в переменной стоящей слева от
 знака "=".
<адрес> -буква, характеризующая расширенный код (D,L, или имя оси);
n - индекс переменной.

Между словом с адресом Е и знаком "=", а также между знаком "=" и
 "выражением" допускается программировать произвольное количество пустых
  символов (пробелов). В одном кадре можно выполнять произвольное
  количество присвоений, разделяя их знаком "," например:

N25 E14=E35, E198=2.354-EX+E100,E0=0   , E198 =50, E30=ED35, E55=SQR(E10)
EX15=EX, EY15=EY, EZ15=EZ, EA15=EA EB15=EB, E150=EA15, E90=0

В режиме командной строки (MDI) допускается присвоение основных и
 расширенных переменных одном кадре (см. последний пример).
Нельзя переносить часть операторов на другую строку, а также
 программировать совместно с операторами присваивания операторы
 других типов (ISO или трехбуквенных кодов).


Операции в выражениях блоков присваивания

Система выполняет следующие арифметические операции:
     +   -сложение;
     -   -вычитание;
     *   -умножение;
     /   -деление.

Арифметические операции могут использоваться как напрямую в выражениях
 так и в параметрах функций.

Значения математических выражений вычисляются с учетом
 приоритетов скобок и операций.
 Операции умножение(*) деление(/) имеют приоритет выше чем
 операции сложение(+) вычитание(-).
 Приоритеты операций умножение(*) деление(/) равный между собой.
 Приоритеты операций сложение(+) вычитание(-) равный между собой.
Арифметические операции, имеющие равный приоритет выполняются в порядке
 следования. Результаты выполнения  арифметические операции с различными
 комбинациями типов чисел (LongInt -целое, Double -вещественное число),
 приведены ниже:
   LongInt  "операция" LongInt  = LongInt
   Double   "операция" Double   = Double
   LongInt  "операция" Double   = Double

Число или результат выражения принимают тип того Е-параметра, которому
 они присваиваются, если целому числу присваивается вещественный
 результат -он округляется до ближайшего целого значения.

Функции в выражениях блоков присваивания

Система поддерживает следующие функции:
  SIN(i)    -вычисляет синус i;
  COS(i)    -вычисляет косинус i;
  TAN(i)    -вычисляет тангенс i;
  ART(i)    -вычисляет арктангенс i;
  SQR(i)    -вычисляет квадратный корень из i;
  ABS(i)    -вычисляет абсолютное значение i;
  INT(i)    -вычисляет целую часть i;
  NEG(i)    -изменяет знак i на противоположный.

Формальный параметр i в функциях может быть задан:
 ■ числом;
 ■ основным или расширенным Е- параметром;
 ■ "выражением".

Значения тригонометрических функций SIN,COS,TAN и результаты
 вычислений функции ART следует выражать в градусах.

Примеры программирования блоков присваивания

N001  Е0 =0
N364  Е10 =2831.3920384
N0192       E8 = 29381.012811
N2  E37= (E31*  SIN(E30)+129.291)/SQR(E16) +E0/0.02937
N11    E0=ABS(2938.19222222*SIN(E34+E35))
N99999 E0    =     SQR(    ABS(-11111.34857934857)   ) +7
N123  "SIN_UG"  E88=SIN(E56)
N0001  E75=NEG(E75)
N15    E17       =     ART(      E2   /     10    )
N8     E25 = E25 +30
N184   E8 = 28374.38467/ 18267.20348
N002   ABS(SQR((E46+29.293)*((3+2)/(E12/2+293.11))))
E18 =EZ-EL
E3  = (ED11-ED12)/ 7.3451
E199 =EX
E150 = ED+14.223
ED8 = ED7-1.0234
EL99 =E140
EX1 =EX-E120
EZ1 =EZ-EL
N25 E14=E35, E198=2.354-EX+E100,E0=0   ,  E198 =50, E30=ED35, E55=SQR(E10)
N224  E76=34.521, E150=(E76+E77)/2, E76=E150, E199=ABS(SQR(3.1415*E99))
N1000  E10=0, E11=0, E12=0, E100=0

@8.9  КАДРЫ С ТРЕХБУКВЕННЫМИ КОДАМИ

В этом разделе изложены функциональность, синтаксис и порядок
 программирования кадров, имеющих в качестве операторов трехбуквенные коды.
Указанные операторы удобно классифицировать на следующие группы:

 Операторы, изменяющие систему отсчета осей.
 Операторы, изменяющие последовательность  выполнения программы.
 Операторы вывода информации на экран.
 Операторы, устанавливающие значения трехбуквенных системных флагов.

@8.9.1 Операторы, изменяющие систему отсчета осей

Данную группу составляют операторы, позволяющие передвигать систему
 отсчета, в которой запрограммированы все геометрические элементы детали,
 относительно станочной системы координат.

В группу входят следующие операторы:

■ UAO-  использование абсолютных начальных точек;
■ UOT-  определение и использование временных начальных точек;
■ UIO -  определение и использование инкрементных начальных точек.

Система отсчета, заданная операторами UAO, UOT, UIO  остается активной,
 пока не будет переустановлена одной из названных инструкций.

@8.9.1.1  UAO-  использование абсолютных начальных точек

Формат программирования:
(UAO, n)

Операнды  (   UAO  ,   n   ) при программировании могут быть разделены
 между собой произвольным количеством пустых символов (пробелов).

Инструкция устанавливает, для всех кадров перемещений, новую систему
 отсчета, в которой точка начала координат совпадает с координатами,
 заданными под индексом  n  в специально организованной таблице начальных
 точек (далее таблица UAO).
Диапазон допустимых значений индекса  n-  0..99.
Индекс n  может программироваться либо явно, либо с использованием
 целочисленного E -параметра (Е0..Е9).

Ввод координат начальных точек  в таблицу UAO осуществляется
 ■ из меню "Установки" (см. Глава 5);
 ■ с помощью расширенных переменных (см. 8.8.2);
 ■ файле конфигурации BASE.INI (см. Приложение А).

Координаты всех начальных точек, задействованных в управляющей программе
 должны быть введены в таблицу UAO до выполнения компиляции УП(Глава 7).

Координаты начальных точек вносятся в таблицу UAO:
 ■ по каждой из отведенных осей;
 ■ в системе координат станка;
 ■ в единицах измерения- мм.
 ■ диапазон значений для любой оси- 99999..+99999 мм.

В ячейке с индексом "0" хранятся нулевые значения смещения по всем осям.
Эти значения нельзя переустановить из системы, тем самым,
 при программировании (UAO, 0), гарантируется работа в станочной
 системе координат.

Система автоматически устанавливает значение (UAO, 0), задавая станочную
 систему координат:
 ■ при включении;
 ■ на момент начала управляющей программы;
 ■ при выполнении операций сброса (см. Глава 3).

Пример программирования инструкции UAO

N001  X0 Y0 Z0
N002  (UAO, 1)         В ячейке 1 таблицы UAO:  X-70 Y-30 Z-50
N003  X35  Y5
N004  Z-50
N005  G1 Y-20
N006  X-35             программа обработки
N007  Y0
N008  X-20
N007  G2  X20  I0 J0
N008  X40
N009  G0 Z0
N012  (UAO, 2)         В ячейке 2 таблицы UAO:  X-125 Y-60 Z-80
N003  X35  Y5
N004  Z-50
N005  G1 Y-20
N006  X-35             та- же программа обработки что и выше
N007  Y0
N008  X-20
N007  G2  X20  I0 J0
N008  X40
N009  G0 Z0

@8.9.1.2  UOT- определение и использование временных начальных точек

Формат программирования:
(UOT, n [  Var(1),  Var(2),  ...  Var(i) ] )

где:
n  -индекс таблицы UAO (см. 8.9.1, UAO);
Var1..i- адрес i-той оси с числовым значением или основным Е параметром,
 система принимает это значение как смещение и добавляет его к значению
 абсолютного начала координат для данной оси взятой из ячейки n таблицы UAO

Программирование операндов, заключенных в [ ] необязательно.
Каждый адрес может быть запрограммирован только один раз,
 последовательность задания адресов -произвольная. Для незаданных осей,
 активным остается текущее начало координат (UAO, n).

Операнды  ( UOT , n , Var1..i  ) при программировании могут быть разделены
 между собой произвольным количеством пустых символов (пробелов).

Параметры смещений программируются:
 ■ явным числовым значением;
 ■ основным E -параметром (см. 8.8.1).
 ■ в единицах измерения- мм, или мкм, в зависимости от активности
   кодов G70..G71 модальной группы F (см. 8.7.2).

Примеры:
N023  (UOT, 35, X-100, Y-20.345, Z1.23  A0.2  B2.8)
N291  (UOT, 0,  U428367.3625, VE34, W-192.01)
N028  (UOT,1)
N028      (      UOT    ,          1        )
N527   (UOT, E2,  XE56,  Z20,  AE48)

Пример программирования инструкции UOT
В таблице UAO заданы значения:
1    X-150  Y-200
2    X-500  Y-300

N001  X0 Y0
N002  (UOT, 0,  X-50 Y-100)
N003  X0 Y0
N004  (UOT, 1)
N005  X0 Y0
N006  (UOT, 1,  X-100 Y75)
N007  X0 Y0
N008   E4   = 2
N009   E10 = 20
N010  (UOT, E4,  X150 YE10)
N011  X0 Y0
N012  E10 = -100
N013  E120 = -120
N014  (UOT, E4,  XE10 YE120)
N015  X0 Y0
N016  (UOT, 0)
N017  Y0

@8.9.1.3  UIO- определение и использование инкрементных начальных точек

Формат программирования:
(UIO, [  Var(1),  Var(2),  ...  Var(i) ] )

где:
Var1..i- адрес i-той оси с числовым значением,
 система принимает это значение как смещение и добавляет его
 к текущему значению абсолютного начала координат для данной оси.

Программирование операндов, заключенных в [ ] необязательно.
Каждый адрес может быть запрограммирован только один раз,
 последовательность задания адресов -произвольная.
Для незаданных осей, активным остается текущее начало координат,
 пустой оператор (UIO) не вызывает никаких действий.

Параметры смещений программируются:
 ■ явным числовым значением;
 ■ основным E -параметром (см. 8.8.1).
 ■ в единицах измерения- мм, или мкм, в зависимости
   от активности кодов G70..G71 модальной группы F (см. 8.7.2).

Операнды  ( UIO , Var1..i  ) при программировании могут быть разделены
 между собой произвольным количеством пустых символов (пробелов)

Примеры:
N023  (UIO,  X-100,  Z1.23  UE45  B243.8912)
N291  (UIO, 0,  U428367.3625     ,      VE34   ,  W-192.01     )
N028  (UIO)
N028      (      UIO      )
N527   (UIO, E2,  XE56,  Z20,  AE48)

Пример программирования инструкции UIO
N001  G00 X0 Y0
N002  (UIO,  X-50 Y-50)
N003  X20 Y20
N004  G01 X-20
N005  G00
N006  (UIO,  X-50 Y-50)
N007  X20 Y20
N008  G01 X-20
N009  G00
N010  E32 = 50
N011  (UIO,  X-50 YE32)
N012  X20 Y20
N013  G01 X-20

@8.9.2 Операторы, изменяющие последовательность выполнения программ

В группу входят следующие операторы:
 ■ RPT, ERP- циклический повтор группы кадров УП;
 ■ CLS, SUB, ESUB- использование подпрограмм;
 ■ DNC, BEQ,BGT, BLT, BGE, BLE- команды программных переходов.

@8.9.2.1  RPT, ERP- циклический повтор кадров управляющей программы

Команды RPT и ERP ограничивают группу кадров УП, которые следует выполнить
 заданное число раз. Эта группа начинается с RPT и заканчивается ERP.
Формат полной команды RPT/ERP следующий:

(RPT,i)
..........
(ERP)
где:
RPT- оператор, задающий начало цикла;
i -счетчик количества повторов:
 ■ целое число;
 ■ диапазон допустимых значений- 1..65535;
 ■ может программироваться либо явно,
   либо E -параметром целого типа (Е0..Е9);
 ■ уменьшается на 1 при каждом проходе;

.........  - группа программных блоков;
ERP- оператор, задающий конец цикла.
Цикл завершается, если на момент выполнения оператора ERP значение
 счетчика i = 0.

Максимальное количество циклов в файле- 99.
Максимальный установленный уровень вложений циклов -3 в каждой
 подпрограмме или в программе, значит если организовать циклы с
 использованием подпрограмм, то при уровне вложений подпрограмм
 равным 5 можно получить уровень вложений цикла -15.
В рамках одной структуры внутри цикла RPT/ERP можно открыть еще
 до 2 циклов повтора например:

N000  (RPT, Е1)                 начало цикла 3го уровня
.........
N100  (RPT, 50)                 начало цикла 2го уровня
.........
N200  (RPT, 9999)               начало цикла 1го уровня
.........
N300  (ERP)                     конец цикла 1го уровня
.........
N400  (ERP)                     конец цикла 2го уровня
.........
N500  (ERP)                     конец цикла 3го уровня

Пример использования операторов RPT/ERP
(повторение циклов с постоянным интервалом)
N000 (DIS,  ' используем:  вложенный RPT, UIO, G41 ')
N001  X0Y0
N002  S1000 T1.99 M06 M03
N003  (RPT,2)
N004  G0 Z0
N005  (UIO,X80,Y30)
N006  X-25 Y-20
N007  (RPT,3)
N008  G91 Z-10
N009  G90 G1 G41 X-20 Y-20 F500
N010  Y15
N010  X20
N011  Y-15
N012  X-25
N013  G40 Y-20
N015  (ERP)
N015  (ERP)
N016  G0 Z0

Пример использования операторов RPT/ERP
(эквидистантные отверстия)
N000 (DIS,  ' используем:  RPT,  G81,  Е- параметры ')
;
N001  X0Y0
N002  S1000 T1.1 M06 M03
N003  E0    = 8
N004  E10  = 15
N005  E11  = 25
N006  E12  = 20
N007  E13  = 10
;
N008  G81 R40
N009  (RPT, E0)
N010  XE10 YE11 Z-10
N011  E10 =E10 + E12
N012  E11 =E11 + E13
N013  (ERP)
N014  G80 Z0

@8.9.2.2  CLS, SUB, ESUB- использование подпрограмм

Подпрограмма- это последовательность кадров, которые определяют
 повторяющийся цикл обработки.

Операторы SUB, ESUB позволяют определить подпрограмму.
Формат полной команды SUB/ESUB следующий:

(SUB,  "имя подпрограммы")
..........
(ESUB)

где:
SUB- оператор, задающий начало подпрограммы;
"имя подпрограммы"- алфавитно-цифровой код:
 ■ содержит 1..8 символов;
 ■ первый символ -буква;
 ■ все буквы заглавные;
 ■ имена различных подпрограмм на должны повторяться в одном файле.

.........  - группа программных блоков;
ESUB- оператор, задающий конец подпрограммы;

Подпрограммы определяются в текущем файле выше признака начала основной
 программы- %. Подпрограммы делятся на внешние и внутренние (см.8.6).
Внутренние подпрограммы являются неотьемлемой частью файла, в котором
 они размещены. Текст внешних подпрограмм временно присоединяется к
 тексту текущего файла по следующей инструкции
 #  <имя файла>  ,  <имя подпрограммы>
 далее редактируется, компилируется как обычный текст, при завершении
 работы с файлом -не сохраняется на диске.

Операция вставки текста подпрограмм в исходный файл выполняется
 автоматически при загрузке файла или по команде "Сборка" (см. Глава 7).
Номер кадра с инструкцией  #  не программируется.

Максимальное количество подпрограмм в файле- 128.
Максимальный уровень вложений подпрограмм -5,

Определенная операторами SUB/ESUB подпрограмма может быть вызвана из
 основной программы или из любой подпрограммы, в том числе данной
 (рекурсивно) с помощью оператора CLS.
Формат программирования:

(CLS, "имя подпрограммы" )
где:
CLS- оператор, вызова подпрограммы;
"имя подпрограммы"- алфавитно-цифровой код одной из
подпрограмм, определенных в текущем файле операторами
SUB/ESUB.

Пример использования операторов подпрограмм
(операторы  SUB  ESUB  CLS)
N01 (SUB,CIRCLE)
N02 E01=E25/E20
N03 (RPT,E01)
N04 E10=E10+E20
N05 (DIS,'ТЕКУЩИЙ УГОЛ=',E10,' градусов')
N06 E14=E12+E11*COS(E10)
N07 E15=E13+E11*SIN(E10)
N08 XE14YE15
N09 (ERP)
N10 (ESUB)
%
N11 (UAO,1)
N12 G1G90
N13 E10=0                         текущий угол
N14 E11=100                       радиус окружности
N15 E12=0                         центр окружности по X
N16 E13=0                         центр окружности по Y
N17 E20=0.5                       угловое приращение
N18 E25=300                       часть дуги в градусах
N19 E26=-50                       глубина (Z)
N20 E60=1800                      подача
N21 XE11Y0Z0FE60
N22 (CLS,CIRCLE)
N23 G0Z0

@8.9.2.3  DNC, BEQ, BGT, BLT, BGE, BLE- команды программных переходов

Команды переходов осуществляют переход на программный блок, содержащий
 соответствующее поле метки. Переходы могут быть безусловными и условными.
Условия задаются с помощью числовых значений, Е- параметров, "выражений".
Формат и назначение операторов перехода:

(BNC, "метка")- безусловный переход на блок с меткой;
(BGT, Var1, Var2, "метка")- переход на блок с меткой если
                             Var1 больше чем Var2;
(BLT, Var1, Var2, "метка")- переход на блок с меткой если
                             Var1 меньше чем Var2;
(BEQ, Var1, Var2, "метка")- переход на блок с меткой если
                             Var1 равно Var2;
(BNE, Var1, Var2, "метка")- переход на блок с меткой если
                             Var1 не равно Var2;
(BGE, Var1, Var2, "метка")- переход на блок с меткой если
                             Var1 больше или равно Var2;
(BLE, Var1, Var2, "метка")- переход на блок с меткой если
                             Var1 меньше или равно Var2;
где:
Var1, Var2- переменные Е- параметры, числа или "выражения" (8.8),
 значения которых определяют переход по условию;
 "метка"- алфавитно-цифровой код, содержащий 1..8 знаков в
 двойных кавычках (8.4).

Не допускаются переходы:
 ■ из основной программы в подпрограмму;
 ■ из подпрограммы в основную программу;
 ■ в тело цикла, минуя оператор RPT;
 ■ в тело автоматического цикла, минуя операторы G81..G89.

Если переменные Var1, Var2 вещественные, любая математическая операция
 выполненная с ними, обладает ошибкой приближения, характерной для
 процессора, который выполняет накопление после каждой последовательно
 выполняемой операции. Такую ошибку необходимо учитывать в операторах
 перехода BNE, BEQ, BGE, BLE при определении той десятичной дроби-порога,
 ниже которой обе переменные можно считать равными.

Примеры кадров программных переходов:
N11    (BNC, QUIT)
N29374 (BGT, E45, E1, BACK)
N153      (    BGL   ,     29384.4837  ,   29384.4836,  L00000 )
N2222  (BEQ, 2, E2, STOP)
N923   (BNE, 0.229293, 0.229294, _LABEL)
N7777  (BGE,    E0,    1.92837, EXIT)
N0564 (BGE, E32-2374.492+ED, E192, STOP)
N0129  (BEQ, EX, EZ, BREAK)
N2182  (BNE, EL2+EL+2.132-E140, E45+E145, LAB)
N3421  (BGT,EK,4, INC)

Пример использования оператора перехода:
N000 (DIS,  ' используем:  RPT,  G81,  Е- параметры ')
;
N001  X0Y0
N002  S1000 T1.1 M06 M03
N003  E0    = 16
N004  E10  = 15
N005  E11  = 25
N006  E12  = 20
;
N007  G81 R40
N008  (RPT, E0)
N009  XE10 YE11 Z-10
N010  E10 =E10 + E12
N011  (BLT, E10, 160, ENDRPT)
N012  E10=155
N013  E11=55
N014  E20= NEG(E20)
N015  "ENDRPT" (ERP)
N016  G80 Z0

@8.9.3 Операторы вывода информации на экран

В группу входит единственный оператор:
DIS- отображение на экране переменной или контекста.

Команда DIS позволяет воспроизвести на экране, в поле сообщений оператора,
 значение заданной переменной или контекста.

Формат команды:
(DIS, [ "контекст", "выражение", ...  ] )

где:
"контекст"- набор любых символов, заключенный в одинарные кавычки ' ',
"выражение"- числовое значение, Е- параметр или математическое выражение.

Количество операндов типа "контекст" или "выражение",программируемых в
 одной команде DIS не ограничено.
Операнды разделены друг от друга знаком ",".

Вещественные Е- параметры выводятся в 12 позициях с 3 дробными знаками.
Общая длина строки- 40 знаков.

Сообщения, выданные командой DIS, отображаются в отдельной строке зеленым
 цветом и автоматически сбрасываются в следующих случаях:
 ■ начало программы;
 ■ конец программы;
 ■ новый оператор DIS.

Программируются из УП или с командной строки в режиме MDI.
Примеры программирования команды DIS:

(DIS,   'ФРЕЗА  R= '  ,  Е40  ,  '  Вылет L= ', E48 )
(DIS,  ', Е55 ,  'fy3%%FHG','ABC', E47, E1, E0)
(DIS, 'СМЕНИ ИНСТРУМЕНТ')
 (DIS, ' Закрепи деталь ' )
 (DIS,  'A = ',  COS(E23/3.1415*180)*E11+245.101)
(DIS,   SQR(    ABS(-11111.34857934857)   ) +7)
(DIS   ,    NEG  (   E75  )  )
(DIS, 'Арктангенс Е2=  ',  ART( E2 ),  ' градусов')
(DIS,   ABS(SQR((E46+29.293)*((3+2)/(E12/2+293.11)))))
(DIS, 'Точка №', 1,'X=',EX1,'Y=',EY1,'Z=',EZ1)
(DIS, EX, EY, EZ)
(DIS, E190+E199)

@8.9.4 Вспомогательные операторы

В группу входят следующие операторы:
 ■ UCV-  отображение на дисплее координат в режиме реального времени;
 ■ TMR- время останова в конце кадра по команде G04.
 ■ СOL-  установка цвета отрисовки кадров в графическом режиме

@8.9.4.1  UCV- отображение на дисплее координат

Формат программирования:
(UCV, Var )
где:
UCV- код, задающий функцию;
Var-  целое число или Е- параметр целого типа (Е0..Е9).
Допустимый диапазон значений 0..2.

Значение параметра Var  связано с видом отображения координат
следующим соответствием:
 0 -на дисплей выводится расчетное значение координаты;
 1 -на дисплей выводится значение координаты с датчика  преобразователя;
 2 -на дисплей выводится разность между расчетным значением координаты
    и значением координаты с датчика преобразователя;

Примеры программирования функции UCV:
N003  (UCV,  2)
N900  (UCV, E6)
N456  (   UCV   ,   E0  )

@8.9.4.2  TMR- время останова в конце кадра по команде G04

Функция устанавливает значение системной переменной TMR, которое
 используется командой G04 для отработки программной паузы (8.7.2).

Формат программирования:
(TMR, Var )
где:
TMR- код, задающий функцию;
Var-  целое число или Е- параметр целого типа (Е0..Е9).
Допустимый диапазон значений 0..255.
Значение параметра Var заносится в системную переменную TMR.

Примеры программирования функции TMR:
N003  (TMR,  20)
N900  (TMR, E0)
N456  (     TMR   ,   E5  )

@8.9.4.3  СOL- установка цвета отрисовки кадров в графическом режиме

Функция устанавливает цвет, которым в графическом режиме (см. Глава 7)
 будут отрисованы траектории всех кадров, следующих за данным оператором.

Формат программирования:
(СOL, Var )
где:
СOL -код, задающий функцию;
Var-  целое число или Е- параметр целого типа (Е0..Е9),
      допустимый диапазон значений 0..8.

В зависимости от значения параметра Var устанавливаются следующие цвета:
 1 -серый;
 2 -синий;
 3 -зеленый;
 4 -голубой;
 5 -красный;
 6 -сиреневый;
 7 -желтый;
 8 -белый;
 0 -системный, специальный режим в котором траектории различных типов
    перемещений рисуются своим цветом:
     ■ зеленым -команды подвода-отвода, быстрый ход (G0);
     ■ желтым  -линейная интерполяция,  рабочий ход (G1);
     ■ голубым -круговая интерполяция,  рабочий ход (G2,G3);

Установленный оператором СOL цвет остается активным, пока не будет
 перезаписан следующим оператором СOL. В графическом режиме редактора
 предусмотрена возможность оперативно перейти от пользовательской палитры
 цветов (1..8) к системной (0) и наоборот.

В начале программы автоматически устанавливается цвет -системный,
соответствующий оператору (СOL,0)

@8.9.4.4  HLT- программное прерывание компиляции

Функция прерывает компиляцию управляющей программы и выдает сообщение
"Прерывание компиляции".

Формат программирования:
(HLT)
где:  HLT -код, задающий функцию;

Может использоваться при отладке УП как временный код, позволяющий
 остановить компиляцию в любом кадре, например для контроля значений
 Е -параметров в данной точке. Совместно с операторами условного перехода
 (8.9.2) может использоваться как постоянный код, блокирующий загрузку
 УП, если какие-либо параметры не соответствуют программным условиям.